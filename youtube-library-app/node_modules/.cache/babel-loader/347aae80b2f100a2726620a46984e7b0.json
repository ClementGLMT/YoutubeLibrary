{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport { store } from '../store';\nimport { showVideoPlayer, modalAction, updateListReducer } from '../actions';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\n\nconst axios = require('axios');\n\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputName = '';\n  }\n\n  openModal() {\n    var video = {\n      title: this.props.data.title.concat(this.props.data.subtitle),\n      thumbnails: this.props.data.thumbnails,\n      id: this.props.data.id\n    };\n    console.log('Modal opened by ' + JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\n    store.dispatch(modalAction('open', video));\n  }\n\n  handlePlay() {\n    this.dispatchShowVideoPlayer();\n  }\n\n  handleDelete() {\n    var self = this;\n    axios.post('http://localhost:2999/remove', {\n      body: {\n        user: store.getState().SetUser.user,\n        rmid: this.props.data.id\n      }\n    }).then(function (response) {\n      console.log(response);\n      /*self.dispatchToogleDataLoaded('leftPanel');\r\n      //self.updateLibrary(response.data.videos);\r\n      self.dispatchToogleDataLoaded('leftPanel');*/\n\n      var side;\n      if (self.props.side === 'OnLeft') side = 'leftPanel';\n      if (self.props.side === 'OnRight') side = 'rightPanel';\n      self.dispatchUpdateList(side, response.data.videos);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  dispatchUpdateList(panel, videos) {\n    store.dispatch(updateListReducer(panel, videos));\n  }\n\n  dispatchShowVideoPlayer() {\n    var lastDisp;\n    var actualRightDisp = store.getState().ShowOnRight; //console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\n\n    for (var k in actualRightDisp) {\n      if (actualRightDisp[k] === 1) lastDisp = k;\n    } //console.log(\"LastDisp : \"+lastDisp);\n    //console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\n\n\n    store.dispatch(showVideoPlayer(lastDisp));\n  }\n\n  render() {\n    var thumbsize;\n    if (this.props.side === 'OnLeft') thumbsize = 'medium';else thumbsize = 'high'; //console.log('State of tile \"'+this.props.data.title.concat(this.props.data.subtitle)+'\": '+JSON.stringify(store.getState()));\n    //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\n\n    if (store.getState().ModalReducer.isModalOpen === true) {//console.log('Opening modal with : '+JSON.stringify(this.props.data));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[thumbsize].url,\n      className: this.props.side,\n      alt: this.props.data.title.concat(this.props.data.subtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.props.data.title,\n      subtitle: this.props.data.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), this.props.side === 'OnLeft' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editPopup\",\n      icon: true,\n      onClick: () => {\n        this.openModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"deletePopup\",\n      icon: true,\n      onClick: () => {\n        this.handleDelete();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => {\n        this.handlePlay();\n      },\n      icon: true,\n      className: \"videoPlayButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"huge\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myCenterTriangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Header","Button","Image","Modal","Input","store","showVideoPlayer","modalAction","updateListReducer","axios","require","VideoTile","Component","constructor","props","inputName","openModal","video","title","data","concat","subtitle","thumbnails","id","console","log","JSON","stringify","dispatch","handlePlay","dispatchShowVideoPlayer","handleDelete","self","post","body","user","getState","SetUser","rmid","then","response","side","dispatchUpdateList","videos","catch","err","panel","lastDisp","actualRightDisp","ShowOnRight","k","render","thumbsize","ModalReducer","isModalOpen","gridTileClass","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport {store} from '../store';\r\nimport {showVideoPlayer, modalAction, updateListReducer} from '../actions';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.inputName = '';\r\n\r\n    }\r\n\r\n    openModal(){\r\n      var video = {\r\n        title:  this.props.data.title.concat(this.props.data.subtitle),\r\n        thumbnails: this.props.data.thumbnails,\r\n        id: this.props.data.id\r\n      } \r\n      console.log('Modal opened by '+JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\r\n      store.dispatch(modalAction('open', video));\r\n    }\r\n\r\n\r\n    handlePlay(){\r\n      this.dispatchShowVideoPlayer();\r\n    }\r\n\r\n    handleDelete() {\r\n      var self = this;\r\n      axios.post('http://localhost:2999/remove', {\r\n        body: {\r\n          user: store.getState().SetUser.user,\r\n          rmid: this.props.data.id\r\n        }\r\n      })\r\n      .then(function(response) {\r\n        console.log(response);\r\n        /*self.dispatchToogleDataLoaded('leftPanel');\r\n        //self.updateLibrary(response.data.videos);\r\n        self.dispatchToogleDataLoaded('leftPanel');*/\r\n        var side;\r\n        if(self.props.side === 'OnLeft')\r\n          side = 'leftPanel';\r\n        \r\n        if(self.props.side === 'OnRight')\r\n          side = 'rightPanel';\r\n        \r\n        self.dispatchUpdateList(side, response.data.videos);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err);\r\n      })\r\n    }\r\n\r\n    dispatchUpdateList(panel, videos) {\r\n      store.dispatch(updateListReducer(panel, videos));\r\n  }\r\n\r\n\r\n\r\n    dispatchShowVideoPlayer() {\r\n\r\n      var lastDisp;\r\n      var actualRightDisp = store.getState().ShowOnRight;\r\n      //console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\r\n      for(var k in actualRightDisp) {\r\n        if(actualRightDisp[k] === 1)\r\n          lastDisp = k ;\r\n     }\r\n     //console.log(\"LastDisp : \"+lastDisp);\r\n     //console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\r\n      store.dispatch(showVideoPlayer(lastDisp));\r\n    }\r\n\r\n      render() {\r\n\r\n        var thumbsize;\r\n        if(this.props.side === 'OnLeft')\r\n          thumbsize = 'medium';\r\n        else \r\n          thumbsize = 'high';\r\n\r\n        //console.log('State of tile \"'+this.props.data.title.concat(this.props.data.subtitle)+'\": '+JSON.stringify(store.getState()));\r\n        //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\r\n\r\n        if(store.getState().ModalReducer.isModalOpen === true){\r\n          //console.log('Opening modal with : '+JSON.stringify(this.props.data));\r\n        }\r\n\r\n\r\n        return(\r\n\r\n          <div>\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[thumbsize].url} className={this.props.side} alt={this.props.data.title.concat(this.props.data.subtitle)}/>\r\n                <GridListTileBar title={this.props.data.title} subtitle={this.props.data.subtitle} >\r\n                </GridListTileBar>\r\n\r\n                { (this.props.side === 'OnLeft') &&\r\n                <div>\r\n                  <Button className='editPopup' icon onClick={() => {this.openModal()}}> <Icon name='edit outline' /></Button>\r\n                  <Button className='deletePopup' icon onClick={() => {this.handleDelete()}}> <Icon name='delete' /></Button>\r\n                  <Button  onClick = {() => {this.handlePlay()}} icon className='videoPlayButton' > \r\n                     <Icon  size ='huge'  name='youtube play' /> \r\n                   </Button>\r\n                    <div className='myCenterTriangle'> </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </GridListTile>\r\n              \r\n            </div>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}