{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Header, Button, Image, Modal, Input, Transition } from 'semantic-ui-react';\nimport { store } from '../store';\nimport { showVideoPlayer, modalAction, updateListReducer } from '../actions';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\n\nconst axios = require('axios');\n\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputName = '';\n    this.addVisible = true;\n    this.inOutVisible = true;\n  }\n\n  openModal() {\n    var video = {\n      title: this.props.data.title.concat(this.props.data.subtitle),\n      thumbnails: this.props.data.thumbnails,\n      id: this.props.data.id\n    };\n    console.log('Modal opened by ' + JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\n    store.dispatch(modalAction('open', video));\n  }\n\n  handlePlay() {\n    this.dispatchShowVideoPlayer({\n      title: this.props.data.title.concat(this.props.data.subtitle),\n      thumbnails: this.props.data.thumbnails,\n      id: this.props.data.id\n    });\n  }\n\n  handleDelete() {\n    var self = this;\n    axios.post('http://localhost:2999/remove', {\n      body: {\n        user: store.getState().SetUser.user,\n        rmid: this.props.data.id\n      }\n    }).then(function (response) {\n      console.log(response);\n      /*self.dispatchToogleDataLoaded('leftPanel');\r\n      //self.updateLibrary(response.data.videos);\r\n      self.dispatchToogleDataLoaded('leftPanel');*/\n\n      var side;\n      if (self.props.side === 'OnLeft') side = 'leftPanel';\n      if (self.props.side === 'OnRight') side = 'rightPanel';\n      self.dispatchUpdateList(side, response.data.videos);\n      this.inOutVisible = !this.inOutVisible;\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  handleAdd() {\n    var self = this;\n    var alreadyIn = false;\n    var videos = store.getState().DataLoading.leftPanel.videos;\n\n    for (let i = 0; i < videos.length; i++) {\n      if (this.props.data.id === videos[i].id) {\n        alreadyIn = true;\n        break;\n      }\n    }\n\n    if (alreadyIn) alert('Video already in your library !');else {\n      this.addVisible = !this.addVisible;\n      console.log(\"Title added : \" + JSON.stringify(this.props.data));\n      axios.post('http://localhost:2999/add', {\n        user: store.getState().SetUser.user,\n        addid: this.props.data.id,\n        addtitle: this.props.data.title.concat(this.props.data.subtitle),\n        thumbnails: JSON.stringify(this.props.data.thumbnails)\n      }).then(function (response) {\n        console.log(response);\n        var side;\n        if (self.props.side === 'OnLeft') side = 'leftPanel';\n        if (self.props.side === 'OnRight') side = 'rightPanel';\n        self.dispatchUpdateList('leftPanel', response.data.videos);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n  }\n\n  dispatchUpdateList(panel, videos) {\n    store.dispatch(updateListReducer(panel, videos));\n  }\n\n  dispatchShowVideoPlayer(video) {\n    var lastDisp;\n    var actualRightDisp = store.getState().ShowOnRight; //console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\n\n    for (var key in actualRightDisp) {\n      if (actualRightDisp[key]) actualRightDisp[key] = false;\n    }\n\n    actualRightDisp.videoToPlay = video; //console.log(\"LastDisp : \"+lastDisp);\n    //console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\n\n    store.dispatch(showVideoPlayer(actualRightDisp));\n  }\n\n  render() {\n    var thumbsize;\n    if (this.props.side === 'OnLeft') thumbsize = 'medium';else thumbsize = 'high'; //console.log('State of tile \"'+this.props.data.title.concat(this.props.data.subtitle)+'\": '+JSON.stringify(store.getState()));\n    //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\n\n    if (store.getState().ModalReducer.isModalOpen === true) {//console.log('Opening modal with : '+JSON.stringify(this.props.data));\n    }\n\n    const button = {};\n    return React.createElement(Transition, {\n      animation: \"drop\",\n      duration: 500,\n      visible: this.inOutVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Transition, {\n      animation: \"pulse\",\n      duration: 500,\n      visible: this.addVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[thumbsize].url,\n      className: this.props.side,\n      alt: this.props.data.title.concat(this.props.data.subtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.props.data.title,\n      subtitle: this.props.data.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), this.props.side === 'OnLeft' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editPopup\",\n      icon: true,\n      onClick: () => {\n        this.openModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"deletePopup\",\n      icon: true,\n      onClick: () => {\n        this.handleDelete();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => {\n        this.handlePlay();\n      },\n      icon: true,\n      className: \"videoPlayButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"huge\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myCenterTriangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \" \")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"addPopup\",\n      icon: true,\n      onClick: () => {\n        this.handleAdd();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"big\",\n      name: \"add square\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: () => {\n        this.handlePlay();\n      },\n      icon: true,\n      className: \"videoPlayButtonRight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"massive\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myBigCenterTriangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \" \")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Header","Button","Image","Modal","Input","Transition","store","showVideoPlayer","modalAction","updateListReducer","axios","require","VideoTile","Component","constructor","props","inputName","addVisible","inOutVisible","openModal","video","title","data","concat","subtitle","thumbnails","id","console","log","JSON","stringify","dispatch","handlePlay","dispatchShowVideoPlayer","handleDelete","self","post","body","user","getState","SetUser","rmid","then","response","side","dispatchUpdateList","videos","catch","err","handleAdd","alreadyIn","DataLoading","leftPanel","i","length","alert","addid","addtitle","panel","lastDisp","actualRightDisp","ShowOnRight","key","videoToPlay","render","thumbsize","ModalReducer","isModalOpen","button","gridTileClass","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Header, Button, Image, Modal, Input, Transition } from 'semantic-ui-react';\r\nimport {store} from '../store';\r\nimport {showVideoPlayer, modalAction, updateListReducer} from '../actions';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.inputName = '';\r\n      this.addVisible= true;\r\n      this.inOutVisible = true;\r\n\r\n    }\r\n\r\n    openModal(){\r\n      var video = {\r\n        title:  this.props.data.title.concat(this.props.data.subtitle),\r\n        thumbnails: this.props.data.thumbnails,\r\n        id: this.props.data.id\r\n      } \r\n      console.log('Modal opened by '+JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\r\n      store.dispatch(modalAction('open', video));\r\n    }\r\n\r\n\r\n    handlePlay(){\r\n      this.dispatchShowVideoPlayer({\r\n        title: this.props.data.title.concat(this.props.data.subtitle),\r\n        thumbnails: this.props.data.thumbnails,\r\n        id: this.props.data.id\r\n      });\r\n    }\r\n\r\n    handleDelete() {\r\n      var self = this;\r\n      axios.post('http://localhost:2999/remove', {\r\n        body: {\r\n          user: store.getState().SetUser.user,\r\n          rmid: this.props.data.id\r\n        }\r\n      })\r\n      .then(function(response) {\r\n        console.log(response);\r\n        /*self.dispatchToogleDataLoaded('leftPanel');\r\n        //self.updateLibrary(response.data.videos);\r\n        self.dispatchToogleDataLoaded('leftPanel');*/\r\n        var side;\r\n        if(self.props.side === 'OnLeft')\r\n          side = 'leftPanel';\r\n        \r\n        if(self.props.side === 'OnRight')\r\n          side = 'rightPanel';\r\n        \r\n        self.dispatchUpdateList(side, response.data.videos);\r\n        this.inOutVisible = !this.inOutVisible;\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err);\r\n      })\r\n    }\r\n\r\n    handleAdd() {\r\n      var self = this;\r\n      var alreadyIn = false;\r\n\r\n      var videos = store.getState().DataLoading.leftPanel.videos;\r\n\r\n      for (let i = 0; i < videos.length; i++) {\r\n        if(this.props.data.id === videos[i].id){\r\n          alreadyIn = true;\r\n          break;\r\n        }\r\n      }\r\n      if(alreadyIn)\r\n        alert('Video already in your library !')\r\n      else {\r\n\r\n        this.addVisible = !this.addVisible;\r\n        console.log(\"Title added : \"+JSON.stringify(this.props.data));\r\n        axios.post('http://localhost:2999/add', {\r\n            user: store.getState().SetUser.user,\r\n            addid: this.props.data.id,\r\n            addtitle: this.props.data.title.concat(this.props.data.subtitle),\r\n            thumbnails: JSON.stringify(this.props.data.thumbnails)\r\n        })\r\n        .then(function(response) {\r\n          console.log(response);\r\n          var side;\r\n          if(self.props.side === 'OnLeft')\r\n            side = 'leftPanel';\r\n          \r\n          if(self.props.side === 'OnRight')\r\n            side = 'rightPanel';\r\n          \r\n          self.dispatchUpdateList('leftPanel', response.data.videos);\r\n        })\r\n        .catch(function(err) {\r\n          console.log(err);\r\n        })\r\n      }\r\n\r\n      \r\n    }\r\n\r\n    dispatchUpdateList(panel, videos) {\r\n      store.dispatch(updateListReducer(panel, videos));\r\n  }\r\n\r\n\r\n\r\n    dispatchShowVideoPlayer(video) {\r\n\r\n      var lastDisp;\r\n      var actualRightDisp = store.getState().ShowOnRight;\r\n      //console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\r\n\r\n      for(var key in actualRightDisp){\r\n        if(actualRightDisp[key])\r\n          actualRightDisp[key] = false;\r\n      }\r\n      actualRightDisp.videoToPlay = video;\r\n     //console.log(\"LastDisp : \"+lastDisp);\r\n     //console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\r\n      store.dispatch(showVideoPlayer(actualRightDisp));\r\n    }\r\n\r\n      render() {\r\n\r\n        var thumbsize;\r\n        if(this.props.side === 'OnLeft')\r\n          thumbsize = 'medium';\r\n        else \r\n          thumbsize = 'high';\r\n\r\n        //console.log('State of tile \"'+this.props.data.title.concat(this.props.data.subtitle)+'\": '+JSON.stringify(store.getState()));\r\n        //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\r\n\r\n        if(store.getState().ModalReducer.isModalOpen === true){\r\n          //console.log('Opening modal with : '+JSON.stringify(this.props.data));\r\n        }\r\n\r\n        const button = {};\r\n\r\n\r\n        return(\r\n\r\n\r\n          <Transition          \r\n            animation='drop'\r\n            duration={500}\r\n            visible={this.inOutVisible}\r\n          >\r\n          <Transition\r\n          animation='pulse'\r\n          duration={500}\r\n          visible={this.addVisible}\r\n        >\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[thumbsize].url} className={this.props.side} alt={this.props.data.title.concat(this.props.data.subtitle)}/>\r\n                <GridListTileBar title={this.props.data.title} subtitle={this.props.data.subtitle} >\r\n                </GridListTileBar>\r\n\r\n                { (this.props.side === 'OnLeft') \r\n                  ? <div>\r\n                      <Button className='editPopup' icon onClick={() => {this.openModal()}}> <Icon name='edit outline' /></Button>\r\n                      <Button className='deletePopup' icon onClick={() => {this.handleDelete()}}> <Icon name='delete' /></Button>\r\n                      <Button  onClick = {() => {this.handlePlay()}} icon className='videoPlayButton' > \r\n                        <Icon  size ='huge'  name='youtube play' /> \r\n                      </Button>\r\n                      <div className='myCenterTriangle'> </div>\r\n                    </div>\r\n                  : <div>\r\n                    <Button className = 'addPopup' icon onClick= {() => {this.handleAdd()}}>\r\n                      <Icon  size = 'big' name='add square' />\r\n                    </Button>\r\n                    <Button  onClick = {() => {this.handlePlay()}} icon className='videoPlayButtonRight' > \r\n                      <Icon  size ='massive'  name='youtube play' /> \r\n                    </Button>   \r\n                    <div className='myBigCenterTriangle'> </div>                 \r\n                  </div>\r\n                }\r\n            </GridListTile>\r\n          </Transition>\r\n        </Transition>\r\n\r\n\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}