{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\rightSearchResults.js\";\nimport React from 'react';\nimport VideoList from './videolist';\nimport 'semantic-ui-css/semantic.min.css';\nimport SearchForm from './searchForm';\nimport './components.css';\nimport { store } from '../store';\nimport tileData from './tileData';\nexport default class RightSearchResults extends React.Component {\n  render() {\n    var state = store.getState().DataLoading.rightPanel;\n    var data = [];\n\n    if (state.isSearching.search && state.isLoading) {\n      for (let i = 0; i < state.isSearching.maxRes; i++) {\n        data[i] = tileData[i];\n      }\n    }\n\n    if (state.isSearching.search && !state.isLoading) {\n      data = state.videos;\n    } //console.log(\"Data in RightSearchResults: \"+JSON.stringify(store.getState().DataLoading.rightPanel));\n\n\n    return React.createElement(\"div\", {\n      className: \"rightPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      className: \"searchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), () => {\n      if (!state.hasErrored) return React.createElement(VideoList, {\n        side: \"OnRight\",\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    });\n  }\n\n}\n/*{(store.getState().DataLoading.rightPanel.isSearching.search) &&\r\n    <VideoList side='OnRight' data={data}/>\r\n    }*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/rightSearchResults.js"],"names":["React","VideoList","SearchForm","store","tileData","RightSearchResults","Component","render","state","getState","DataLoading","rightPanel","data","isSearching","search","isLoading","i","maxRes","videos","hasErrored"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,kCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,kBAAP;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAIA,eAAe,MAAMC,kBAAN,SAAiCL,KAAK,CAACM,SAAvC,CAAiD;AAK5DC,EAAAA,MAAM,GAAI;AAEN,QAAIC,KAAK,GAAGL,KAAK,CAACM,QAAN,GAAiBC,WAAjB,CAA6BC,UAAzC;AAEA,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAGJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,IAA4BN,KAAK,CAACO,SAArC,EAA+C;AAC3C,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACK,WAAN,CAAkBI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CJ,QAAAA,IAAI,CAACI,CAAD,CAAJ,GAAUZ,QAAQ,CAACY,CAAD,CAAlB;AACH;AACJ;;AAED,QAAGR,KAAK,CAACK,WAAN,CAAkBC,MAAlB,IAA4B,CAACN,KAAK,CAACO,SAAtC,EAAiD;AAC7CH,MAAAA,IAAI,GAAGJ,KAAK,CAACU,MAAb;AACH,KAdK,CAgBN;;;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGK,MAAM;AACH,UAAG,CAACV,KAAK,CAACW,UAAV,EACI,OACI,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAEP,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGP,KARL,CADJ;AAaH;;AArC2D;AAwChE","sourcesContent":["import React from 'react';\r\nimport VideoList from './videolist';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport SearchForm from './searchForm';\r\nimport './components.css';\r\nimport {store} from '../store';\r\nimport tileData from './tileData';\r\n\r\n\r\n\r\nexport default class RightSearchResults extends React.Component {\r\n\r\n\r\n\r\n\r\n    render()  {\r\n\r\n        var state = store.getState().DataLoading.rightPanel;\r\n\r\n        var data = [];\r\n\r\n        if(state.isSearching.search && state.isLoading){\r\n            for (let i = 0; i < state.isSearching.maxRes; i++) {\r\n                data[i] = tileData[i];\r\n            }\r\n        }\r\n\r\n        if(state.isSearching.search && !state.isLoading) {\r\n            data = state.videos;\r\n        }\r\n\r\n        //console.log(\"Data in RightSearchResults: \"+JSON.stringify(store.getState().DataLoading.rightPanel));\r\n\r\n\r\n        return(\r\n            <div className='rightPanel'>\r\n                <SearchForm className='searchForm'/>\r\n  \r\n                {() => {\r\n                    if(!state.hasErrored)\r\n                        return(\r\n                            <VideoList side='OnRight' data={data}/>\r\n                        );\r\n                }}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n/*{(store.getState().DataLoading.rightPanel.isSearching.search) &&\r\n    <VideoList side='OnRight' data={data}/>\r\n    }*/"]},"metadata":{},"sourceType":"module"}