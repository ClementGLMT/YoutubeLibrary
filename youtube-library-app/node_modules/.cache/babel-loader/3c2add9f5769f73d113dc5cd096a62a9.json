{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.show = dimmer => () => this.setState({\n      dimmer,\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.state = {\n      thumbClass: '',\n      title: '',\n      subtitle: '',\n      isRight: ''\n    };\n    this.inputName = '';\n\n    if (this.props.thumbsize === 'medium') {\n      this.state.thumbClass = 'medium';\n      this.state.isRight = 0;\n    }\n\n    if (this.props.thumbsize === 'high') {\n      this.state.thumbClass = 'high';\n      this.state.isRight = 1;\n    }\n\n    this.state.title = this.props.data.title;\n    this.state.subtitle = '';\n\n    if (this.props.data.title.length > 41) {\n      this.state.title = '';\n      var arr = this.props.data.title.split(' ');\n      console.log(arr);\n      var i = 0;\n\n      while (this.state.title.length + arr[i].length < 40) {\n        this.state.title = this.state.title.concat(arr[i]);\n        this.state.title = this.state.title.concat(' ');\n        console.log(\"Title = \" + this.state.title + \" for i = \" + i);\n        i++;\n      }\n\n      console.log(\"break for i = \" + i);\n\n      for (let j = i; j < arr.length; j++) {\n        this.state.subtitle = this.state.subtitle.concat(arr[j]);\n        this.state.subtitle = this.state.subtitle.concat(' ');\n        console.log(\"subtitle = \" + this.state.subtitle + \" for j = \" + j);\n      }\n    }\n  }\n\n  render() {\n    const {\n      open,\n      dimmer\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[this.props.thumbsize].url,\n      className: this.state.thumbClass,\n      alt: this.state.title.concat(this.state.subtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.state.title,\n      subtitle: this.state.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), !this.state.isRight && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editPopup\",\n      icon: true,\n      onClick: this.show('blurring'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Button, {\n      animated: \"vertical\",\n      className: \"videoPlayButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button.content, {\n      visible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"huge\",\n      color: \"red\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Button.content, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Click to play\")))), React.createElement(Modal, {\n      style: {\n        marginBottom: '10px'\n      },\n      dimmer: dimmer,\n      open: open,\n      onClose: this.close,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.title.concat(this.state.subtitle)), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: this.props.data.thumbnails.medium.url,\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"What's the new name of your video ?\"), React.createElement(Input, {\n      onChange: (event, data) => {\n        this.inputName = data.value;\n      },\n      placeholder: \"New name\",\n      style: {\n        marginTop: '28.375px',\n        marginLeft: '56.55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Confirm\",\n      onClick: () => {\n        alert(this.inputName);\n        this.close();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Header","Button","Image","Modal","Input","VideoTile","Component","constructor","props","state","open","show","dimmer","setState","close","thumbClass","title","subtitle","isRight","inputName","thumbsize","data","length","arr","split","console","log","i","concat","j","render","id","gridTileClass","thumbnails","url","marginBottom","medium","marginLeft","marginRight","event","value","marginTop","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        thumbClass : '',\r\n        title: '',\r\n        subtitle: '',\r\n        isRight: ''\r\n      }\r\n\r\n      this.inputName = '';\r\n\r\n      if(this.props.thumbsize === 'medium'){\r\n        this.state.thumbClass = 'medium';\r\n        this.state.isRight = 0;\r\n      }\r\n      if(this.props.thumbsize === 'high'){\r\n        this.state.thumbClass = 'high';\r\n        this.state.isRight = 1;\r\n      }\r\n\r\n      this.state.title = this.props.data.title;\r\n      this.state.subtitle = '';\r\n\r\n      if(this.props.data.title.length > 41){\r\n        this.state.title = '';\r\n        var arr = this.props.data.title.split(' ');\r\n        console.log(arr);\r\n        var i=0;\r\n        while ((this.state.title.length + arr[i].length) < 40) {\r\n          this.state.title = this.state.title.concat(arr[i]);\r\n          this.state.title = this.state.title.concat(' ');\r\n          console.log(\"Title = \"+ this.state.title+\" for i = \"+i);\r\n            i++;\r\n        }\r\n        console.log(\"break for i = \"+i);\r\n\r\n        for (let j = i; j < arr.length;j++) {\r\n          this.state.subtitle = this.state.subtitle.concat(arr[j]);  \r\n          this.state.subtitle = this.state.subtitle.concat(' ');\r\n          console.log(\"subtitle = \"+ this.state.subtitle+\" for j = \"+j);\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n\r\n    state = { open: false }\r\n\r\n    show = (dimmer) => () => this.setState({ dimmer, open: true })\r\n    close = () => this.setState({ open: false })\r\n\r\n      render() {\r\n\r\n        const { open, dimmer } = this.state;\r\n\r\n        return(\r\n\r\n          <div>\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[this.props.thumbsize].url} className={this.state.thumbClass} alt={this.state.title.concat(this.state.subtitle)}/>\r\n                <GridListTileBar title={this.state.title} subtitle={this.state.subtitle} >\r\n                </GridListTileBar>\r\n\r\n                { !this.state.isRight &&\r\n                  <div>\r\n                  <Button className='editPopup' icon onClick={this.show('blurring')}> <Icon name='edit outline' /></Button>\r\n                  <Button  animated = 'vertical' className='videoPlayButton' > \r\n                  <Button.content visible >\r\n                     <Icon  size ='huge' color='red' name='youtube play' /> \r\n                  </Button.content>\r\n                  <Button.content hidden >\r\n                    Click to play\r\n                  </Button.content>\r\n                   </Button>\r\n                  </div>\r\n                }\r\n\r\n\r\n            </GridListTile>\r\n\r\n            <Modal style = {{marginBottom: '10px'}} dimmer={dimmer} open={open} onClose={this.close} size='small'>\r\n                <Modal.Header>{this.state.title.concat(this.state.subtitle)}</Modal.Header>\r\n                <Modal.Content image>\r\n                  <Image\r\n                    wrapped\r\n                    size='medium'\r\n                    src={this.props.data.thumbnails.medium.url}\r\n                    className = 'medium'\r\n                  />\r\n                  <Modal.Description>\r\n                    <Header style={{marginLeft: 'auto', marginRight: 'auto'}} >What's the new name of your video ?</Header>\r\n                      <Input onChange={(event,data)=> {this.inputName = data.value}} placeholder='New name' style={{marginTop: '28.375px', marginLeft: '56.55px'}}/>\r\n                  </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                  <Button negative onClick={this.close}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    positive\r\n                    icon='checkmark'\r\n                    labelPosition='right'\r\n                    content=\"Confirm\"\r\n                    onClick={() => {alert(this.inputName);  this.close();}}\r\n                  />\r\n                </Modal.Actions>\r\n              </Modal>\r\n              \r\n            </div>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}