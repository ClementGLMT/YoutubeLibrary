{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thumbClass: '',\n      title: '',\n      subtitle: ''\n    };\n\n    if (this.props.thumbsize === 'medium') {\n      this.state.thumbClass = 'medium';\n    }\n\n    if (this.props.thumbsize === 'high') {\n      this.state.thumbClass = 'high';\n    }\n\n    this.state.title = this.props.data.title;\n    this.state.subtitle = '';\n\n    if (this.props.data.title.length > 41) {\n      this.state.title = this.props.data.title.substring(0, 40);\n      this.state.subtitle = this.props.data.title.substring(40, this.props.data.title.length);\n    }\n  }\n\n  render() {\n    /*                <Popup trigger={<Icon circular name='edit' />} flowing hoverable>\r\n                    </Popup>\r\n                    */\n    return React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[this.props.thumbsize].url,\n      className: this.state.thumbClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.state.title,\n      subtitle: this.state.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Popup","VideoTile","Component","constructor","props","state","thumbClass","title","subtitle","thumbsize","data","length","substring","render","id","gridTileClass","thumbnails","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AAKA,eAAe,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAG,EADF;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;;AAMA,QAAG,KAAKJ,KAAL,CAAWK,SAAX,KAAyB,QAA5B,EAAqC;AACnC,WAAKJ,KAAL,CAAWC,UAAX,GAAwB,QAAxB;AACD;;AACD,QAAG,KAAKF,KAAL,CAAWK,SAAX,KAAyB,MAA5B,EAAmC;AACjC,WAAKJ,KAAL,CAAWC,UAAX,GAAwB,MAAxB;AACD;;AAED,SAAKD,KAAL,CAAWE,KAAX,GAAmB,KAAKH,KAAL,CAAWM,IAAX,CAAgBH,KAAnC;AACA,SAAKF,KAAL,CAAWG,QAAX,GAAsB,EAAtB;;AAEA,QAAG,KAAKJ,KAAL,CAAWM,IAAX,CAAgBH,KAAhB,CAAsBI,MAAtB,GAA+B,EAAlC,EAAqC;AACjC,WAAKN,KAAL,CAAWE,KAAX,GAAmB,KAAKH,KAAL,CAAWM,IAAX,CAAgBH,KAAhB,CAAsBK,SAAtB,CAAgC,CAAhC,EAAmC,EAAnC,CAAnB;AACA,WAAKP,KAAL,CAAWG,QAAX,GAAsB,KAAKJ,KAAL,CAAWM,IAAX,CAAgBH,KAAhB,CAAsBK,SAAtB,CAAgC,EAAhC,EAAoC,KAAKR,KAAL,CAAWM,IAAX,CAAgBH,KAAhB,CAAsBI,MAA1D,CAAtB;AACH;AAEF;;AAECE,EAAAA,MAAM,GAAG;AAEf;;;AAKQ,WAEI,oBAAC,YAAD;AAAe,MAAA,GAAG,EAAE,KAAKT,KAAL,CAAWM,IAAX,CAAgBI,EAApC;AAAwC,MAAA,IAAI,EAAE,CAA9C;AAAiD,MAAA,SAAS,EAAE,KAAKV,KAAL,CAAWW,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAKX,KAAL,CAAWM,IAAX,CAAgBM,UAAhB,CAA2B,KAAKZ,KAAL,CAAWK,SAAtC,EAAiDQ,GAA3D;AAAgE,MAAA,SAAS,EAAE,KAAKZ,KAAL,CAAWC,UAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KAAnC;AAA0C,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAFJ;AAUD;;AA7CgD","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Popup } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        thumbClass : '',\r\n        title: '',\r\n        subtitle: '',\r\n      }\r\n\r\n      if(this.props.thumbsize === 'medium'){\r\n        this.state.thumbClass = 'medium';\r\n      }\r\n      if(this.props.thumbsize === 'high'){\r\n        this.state.thumbClass = 'high';\r\n      }\r\n\r\n      this.state.title = this.props.data.title;\r\n      this.state.subtitle = '';\r\n\r\n      if(this.props.data.title.length > 41){\r\n          this.state.title = this.props.data.title.substring(0, 40);\r\n          this.state.subtitle = this.props.data.title.substring(40, this.props.data.title.length);\r\n      }\r\n\r\n    }\r\n\r\n      render() {\r\n\r\n/*                <Popup trigger={<Icon circular name='edit' />} flowing hoverable>\r\n                </Popup>\r\n                */\r\n\r\n\r\n        return(\r\n\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[this.props.thumbsize].url} className={this.state.thumbClass} />\r\n                <GridListTileBar title={this.state.title} subtitle={this.state.subtitle} />\r\n \r\n\r\n            </GridListTile>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}