{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videolist.js\";\nimport React from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport tileData from './tileData';\nimport VideoTile from './videoTile';\nimport './components.css';\nimport 'semantic-ui-css/semantic.min.css';\nexport default class VideoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user,\n      gridClass: '',\n      gridTileClass: ''\n    };\n\n    if (this.props.side === 'OnLeft') {\n      this.state.gridClass = 'gridListLeft';\n      this.state.gridTileClass = 'gridTileLeft';\n    }\n\n    if (this.props.side === 'OnRight') {\n      this.state.gridClass = 'gridListRight';\n      this.state.gridTileClass = 'gridTileRight';\n    }\n  }\n\n  getTitleAndSubtitle(title) {\n    var subtitle = '';\n    var fullTitle = title;\n\n    if (title.length > 41) {\n      var arr = title.split(' ');\n      title = '';\n      console.log(arr);\n      var i = 0;\n\n      while (title.length + arr[i].length < 40) {\n        title = title.concat(arr[i]);\n        title = title.concat(' ');\n        console.log(\"Title = \" + title + \" for i = \" + i);\n        i++;\n      }\n\n      console.log(\"break for i = \" + i);\n\n      for (let j = i; j < arr.length; j++) {\n        subtitle = subtitle.concat(arr[j]);\n        subtitle = subtitle.concat(' ');\n        console.log(\"subtitle = \" + subtitle + \" for j = \" + j);\n      }\n\n      return {\n        title: title,\n        subtitle: subtitle\n      };\n    }\n\n    return {\n      title: fullTitle,\n      subtitle: ''\n    };\n  }\n\n  render() {\n    var data;\n\n    if (this.props.isDataLoaded === 0) {\n      console.log(\"Loading tileData\");\n      data = tileData;\n    } else {\n      console.log(\"Loading propsData\");\n      data = this.props.data;\n    }\n\n    console.log('Title : ' + data.title);\n    var data2 = [];\n\n    for (let i = 0; i < data.length; i++) {\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\n      data[i].title = data2[i].title;\n      data[i].subtitle = data2[i].subtitle;\n    }\n\n    console.log(\"Data in videoList : \" + JSON.stringify(data));\n    return React.createElement(\"div\", {\n      className: 'root' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 180,\n      className: this.state.gridClass,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data.map(tile => React.createElement(VideoTile, {\n      side: this.props.side,\n      key: tile.id,\n      data: tile,\n      gridTileClass: this.state.gridTileClass,\n      thumbsize: this.state.thumbsize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))));\n  }\n\n}\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videolist.js"],"names":["React","GridList","tileData","VideoTile","VideoList","Component","constructor","props","state","user","gridClass","gridTileClass","side","getTitleAndSubtitle","title","subtitle","fullTitle","length","arr","split","console","log","i","concat","j","render","data","isDataLoaded","data2","JSON","stringify","map","tile","id","thumbsize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport tileData from './tileData';\r\nimport VideoTile from './videoTile'\r\nimport './components.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\n\r\nexport default class VideoList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: this.props.user,\r\n      gridClass: '',\r\n      gridTileClass: '',\r\n    }\r\n\r\n    if(this.props.side === 'OnLeft' ){\r\n      this.state.gridClass = 'gridListLeft';\r\n      this.state.gridTileClass = 'gridTileLeft';\r\n    }\r\n\r\n    if(this.props.side === 'OnRight'){\r\n      this.state.gridClass = 'gridListRight';\r\n      this.state.gridTileClass = 'gridTileRight';\r\n\r\n    }\r\n  }\r\n\r\n  getTitleAndSubtitle(title) {\r\n\r\n    var subtitle='';\r\n    var fullTitle = title;\r\n    if(title.length > 41){\r\n      var arr = title.split(' ');\r\n      title = '';\r\n      console.log(arr);\r\n      var i=0;\r\n      while ((title.length + arr[i].length) < 40) {\r\n        title = title.concat(arr[i]);\r\n        title = title.concat(' ');\r\n        console.log(\"Title = \"+ title+\" for i = \"+i);\r\n          i++;\r\n      }\r\n      console.log(\"break for i = \"+i);\r\n\r\n      for (let j = i; j < arr.length;j++) {\r\n        subtitle = subtitle.concat(arr[j]);  \r\n        subtitle = subtitle.concat(' ');\r\n        console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\r\n      }\r\n      return {\r\n        title: title,\r\n        subtitle: subtitle\r\n      }\r\n    }\r\n    return {\r\n      title: fullTitle,\r\n      subtitle: ''\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n\r\n    var data;\r\n    if(this.props.isDataLoaded === 0){\r\n      console.log(\"Loading tileData\");\r\n      data = tileData;\r\n    }\r\n    else {\r\n      console.log(\"Loading propsData\");\r\n      data = this.props.data;\r\n    }\r\n\r\n    console.log('Title : '+data.title);\r\n    var data2 = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\r\n      data[i].title = data2[i].title;\r\n      data[i].subtitle = data2[i].subtitle;      \r\n    }\r\n\r\n\r\n    console.log(\"Data in videoList : \"+JSON.stringify(data));\r\n\r\n    return (\r\n        <div className={'root'+this.props.side} >\r\n          <GridList cellHeight={180} className={this.state.gridClass} cols={1}>\r\n            {data.map(tile => (\r\n          \r\n                <VideoTile side={this.props.side} key={tile.id} data={tile} gridTileClass= {this.state.gridTileClass} thumbsize={this.state.thumbsize}/>\r\n            \r\n            ))}\r\n          </GridList>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/"]},"metadata":{},"sourceType":"module"}