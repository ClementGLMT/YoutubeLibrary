{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      thumbClass: '',\n      title: '',\n      subtitle: ''\n    };\n\n    if (this.props.thumbsize === 'medium') {\n      this.state.thumbClass = 'medium';\n    }\n\n    if (this.props.thumbsize === 'high') {\n      this.state.thumbClass = 'high';\n    }\n\n    this.state.title = this.props.data.title;\n    this.state.subtitle = '';\n\n    if (this.props.data.title.length > 41) {\n      this.state.title = '';\n      var arr = this.props.data.title.split(' ');\n      console.log(arr);\n      var i = 0;\n\n      while (this.state.title.length + arr[i].length < 40) {\n        this.state.title = this.state.title.concat(arr[i]);\n        this.state.title = this.state.title.concat(' ');\n        console.log(\"Title = \" + this.state.title + \" for i = \" + i);\n        i++;\n      }\n\n      console.log(\"break for i = \" + i);\n\n      for (let j = i; j < arr.length; j++) {\n        this.state.subtitle = this.state.subtitle.concat(arr[j]);\n        this.state.subtitle = this.state.subtitle.concat(' ');\n        console.log(\"subtitle = \" + this.state.subtitle + \" for j = \" + j);\n      }\n    }\n  }\n\n  render() {\n    return React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[this.props.thumbsize].url,\n      className: this.state.thumbClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Popup\n    /*className = 'editPopup'*/\n    , {\n      trigger: React.createElement(Icon, {\n        circular: true,\n        name: \"edit outline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      flowing: true,\n      hoverable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.state.title,\n      subtitle: this.state.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Popup","VideoTile","Component","constructor","props","state","thumbClass","title","subtitle","thumbsize","data","length","arr","split","console","log","i","concat","j","render","id","gridTileClass","thumbnails","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Popup } from 'semantic-ui-react'\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.state = {\r\n        thumbClass : '',\r\n        title: '',\r\n        subtitle: '',\r\n      }\r\n\r\n      if(this.props.thumbsize === 'medium'){\r\n        this.state.thumbClass = 'medium';\r\n      }\r\n      if(this.props.thumbsize === 'high'){\r\n        this.state.thumbClass = 'high';\r\n      }\r\n\r\n      this.state.title = this.props.data.title;\r\n      this.state.subtitle = '';\r\n\r\n      if(this.props.data.title.length > 41){\r\n        this.state.title = '';\r\n        var arr = this.props.data.title.split(' ');\r\n        console.log(arr);\r\n        var i=0;\r\n        while ((this.state.title.length + arr[i].length) < 40) {\r\n          this.state.title = this.state.title.concat(arr[i]);\r\n          this.state.title = this.state.title.concat(' ');\r\n          console.log(\"Title = \"+ this.state.title+\" for i = \"+i);\r\n            i++;\r\n        }\r\n        console.log(\"break for i = \"+i);\r\n\r\n        for (let j = i; j < arr.length;j++) {\r\n          this.state.subtitle = this.state.subtitle.concat(arr[j]);  \r\n          this.state.subtitle = this.state.subtitle.concat(' ');\r\n          console.log(\"subtitle = \"+ this.state.subtitle+\" for j = \"+j);\r\n        }\r\n      }\r\n    }\r\n\r\n      render() {\r\n\r\n\r\n                \r\n\r\n\r\n        return(\r\n\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[this.props.thumbsize].url} className={this.state.thumbClass} />\r\n                <Popup /*className = 'editPopup'*/ trigger={<Icon circular name='edit outline' />} flowing hoverable>\r\n                  </Popup>\r\n                <GridListTileBar title={this.state.title} subtitle={this.state.subtitle} >\r\n\r\n                </GridListTileBar>\r\n\r\n \r\n\r\n            </GridListTile>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}