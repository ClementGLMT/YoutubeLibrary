{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport { store } from '../store';\nimport { showVideoPlayer, modalAction } from '../actions';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.video = {\n      title: this.props.data.title.concat(context.props.data.subtitle),\n      thumbnails: this.props.data.thumbnails\n    };\n    this.inputName = '';\n  }\n\n  openModal() {\n    console.log('Modal opened by ' + JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\n    store.dispatch(modalAction('open', video));\n  }\n\n  dispatchShowVideoPlayer() {\n    var lastDisp;\n    var actualRightDisp = store.getState().ShowOnRight;\n    console.log(\"Previous right panel state \" + JSON.stringify(actualRightDisp));\n\n    for (var k in actualRightDisp) {\n      if (actualRightDisp[k] === 1) lastDisp = k;\n    }\n\n    console.log(\"LastDisp : \" + lastDisp);\n    console.log(\"Previous right panel state modified \" + JSON.stringify(actualRightDisp));\n    store.dispatch(showVideoPlayer(lastDisp));\n  }\n\n  render() {\n    var thumbsize;\n    if (this.props.side === 'OnLeft') thumbsize = 'medium';else thumbsize = 'high';\n    console.log('State of tile \"' + this.props.data.title.concat(this.props.data.subtitle) + '\": ' + JSON.stringify(store.getState())); //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\n\n    if (store.getState().ModalReducer.isModalOpen === true) {\n      console.log('Opening modal with : ' + JSON.stringify(this.props.data));\n    }\n\n    var context = this;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[thumbsize].url,\n      className: this.props.side,\n      alt: this.props.data.title.concat(this.props.data.subtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.props.data.title,\n      subtitle: this.props.data.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.props.side === 'OnLeft' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editPopup\",\n      icon: true,\n      onClick: () => {\n        this.openModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"deletePopup\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.dispatchShowVideoPlayer,\n      icon: true,\n      className: \"videoPlayButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"huge\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myCenterTriangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Header","Button","Image","Modal","Input","store","showVideoPlayer","modalAction","VideoTile","Component","constructor","props","video","title","data","concat","context","subtitle","thumbnails","inputName","openModal","console","log","JSON","stringify","dispatch","dispatchShowVideoPlayer","lastDisp","actualRightDisp","getState","ShowOnRight","k","render","thumbsize","side","ModalReducer","isModalOpen","id","gridTileClass","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,KAAtC,EAA6CC,KAA7C,QAA0D,mBAA1D;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,SAAQC,eAAR,EAAyBC,WAAzB,QAA2C,YAA3C;AACA,OAAO,kCAAP;AACA,OAAO,kBAAP;AAKA,eAAe,MAAMC,SAAN,SAAwBZ,KAAK,CAACa,SAA9B,CAAwC;AAEnDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,KAAKF,KAAL,CAAWG,IAAX,CAAgBD,KAAhB,CAAsBE,MAAtB,CAA6BC,OAAO,CAACL,KAAR,CAAcG,IAAd,CAAmBG,QAAhD,CADG;AAEXC,MAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWG,IAAX,CAAgBI;AAFjB,KAAb;AAKA,SAAKC,SAAL,GAAiB,EAAjB;AAED;;AAEDC,EAAAA,SAAS,GAAE;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAmBC,IAAI,CAACC,SAAL,CAAe,KAAKb,KAAL,CAAWG,IAAX,CAAgBD,KAAhB,CAAsBE,MAAtB,CAA6B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBG,QAA7C,CAAf,CAA/B;AACAZ,IAAAA,KAAK,CAACoB,QAAN,CAAelB,WAAW,CAAC,MAAD,EAASK,KAAT,CAA1B;AACD;;AAIDc,EAAAA,uBAAuB,GAAG;AACxB,QAAIC,QAAJ;AACA,QAAIC,eAAe,GAAGvB,KAAK,CAACwB,QAAN,GAAiBC,WAAvC;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAA8BC,IAAI,CAACC,SAAL,CAAeI,eAAf,CAA1C;;AACA,SAAI,IAAIG,CAAR,IAAaH,eAAb,EAA8B;AAC5B,UAAGA,eAAe,CAACG,CAAD,CAAf,KAAuB,CAA1B,EACEJ,QAAQ,GAAGI,CAAX;AACJ;;AACDV,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcK,QAA1B;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,yCAAuCC,IAAI,CAACC,SAAL,CAAeI,eAAf,CAAnD;AACCvB,IAAAA,KAAK,CAACoB,QAAN,CAAenB,eAAe,CAACqB,QAAD,CAA9B;AACD;;AAECK,EAAAA,MAAM,GAAG;AAEP,QAAIC,SAAJ;AACA,QAAG,KAAKtB,KAAL,CAAWuB,IAAX,KAAoB,QAAvB,EACED,SAAS,GAAG,QAAZ,CADF,KAGEA,SAAS,GAAG,MAAZ;AAEFZ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAkB,KAAKX,KAAL,CAAWG,IAAX,CAAgBD,KAAhB,CAAsBE,MAAtB,CAA6B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBG,QAA7C,CAAlB,GAAyE,KAAzE,GAA+EM,IAAI,CAACC,SAAL,CAAenB,KAAK,CAACwB,QAAN,EAAf,CAA3F,EARO,CASP;;AAEA,QAAGxB,KAAK,CAACwB,QAAN,GAAiBM,YAAjB,CAA8BC,WAA9B,KAA8C,IAAjD,EAAsD;AACpDf,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAwBC,IAAI,CAACC,SAAL,CAAe,KAAKb,KAAL,CAAWG,IAA1B,CAApC;AACD;;AAED,QAAIE,OAAO,GAAG,IAAd;AAEA,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAe,MAAA,GAAG,EAAE,KAAKL,KAAL,CAAWG,IAAX,CAAgBuB,EAApC;AAAwC,MAAA,IAAI,EAAE,CAA9C;AAAiD,MAAA,SAAS,EAAE,KAAK1B,KAAL,CAAW2B,aAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAE,KAAK3B,KAAL,CAAWG,IAAX,CAAgBI,UAAhB,CAA2Be,SAA3B,EAAsCM,GAAhD;AAAqD,MAAA,SAAS,EAAE,KAAK5B,KAAL,CAAWuB,IAA3E;AAAiF,MAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWG,IAAX,CAAgBD,KAAhB,CAAsBE,MAAtB,CAA6B,KAAKJ,KAAL,CAAWG,IAAX,CAAgBG,QAA7C,CAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,IAAX,CAAgBD,KAAxC;AAA+C,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,IAAX,CAAgBG,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKO,KAAKN,KAAL,CAAWuB,IAAX,KAAoB,QAArB,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,IAAI,MAAlC;AAAmC,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKd,SAAL;AAAiB,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvE,CADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,IAAI,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuC,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvC,CAFF,EAGE,oBAAC,MAAD;AAAS,MAAA,OAAO,EAAI,KAAKM,uBAAzB;AAAkD,MAAA,IAAI,MAAtD;AAAuD,MAAA,SAAS,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,IAAD;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,IAAI,EAAC,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAHF,EAMI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANJ,CANJ,CADF,CAFF;AAyBD;;AA5EgD","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport {store} from '../store';\r\nimport {showVideoPlayer, modalAction} from '../actions';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.video = {\r\n        title:  this.props.data.title.concat(context.props.data.subtitle),\r\n        thumbnails: this.props.data.thumbnails\r\n      }\r\n\r\n      this.inputName = '';\r\n\r\n    }\r\n\r\n    openModal(){\r\n      console.log('Modal opened by '+JSON.stringify(this.props.data.title.concat(this.props.data.subtitle)));\r\n      store.dispatch(modalAction('open', video));\r\n    }\r\n\r\n\r\n\r\n    dispatchShowVideoPlayer() {\r\n      var lastDisp;\r\n      var actualRightDisp = store.getState().ShowOnRight;\r\n      console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\r\n      for(var k in actualRightDisp) {\r\n        if(actualRightDisp[k] === 1)\r\n          lastDisp = k ;\r\n     }\r\n     console.log(\"LastDisp : \"+lastDisp);\r\n     console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\r\n      store.dispatch(showVideoPlayer(lastDisp));\r\n    }\r\n\r\n      render() {\r\n\r\n        var thumbsize;\r\n        if(this.props.side === 'OnLeft')\r\n          thumbsize = 'medium';\r\n        else \r\n          thumbsize = 'high';\r\n\r\n        console.log('State of tile \"'+this.props.data.title.concat(this.props.data.subtitle)+'\": '+JSON.stringify(store.getState()));\r\n        //console.log(\"Rendering tile of \"+this.props.data.title.concat(this.props.data.subtitle))\r\n\r\n        if(store.getState().ModalReducer.isModalOpen === true){\r\n          console.log('Opening modal with : '+JSON.stringify(this.props.data));\r\n        }\r\n\r\n        var context = this;\r\n\r\n        return(\r\n\r\n          <div>\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[thumbsize].url} className={this.props.side} alt={this.props.data.title.concat(this.props.data.subtitle)}/>\r\n                <GridListTileBar title={this.props.data.title} subtitle={this.props.data.subtitle} >\r\n                </GridListTileBar>\r\n\r\n                { (this.props.side === 'OnLeft') &&\r\n                <div>\r\n                  <Button className='editPopup' icon onClick={() => {this.openModal()}}> <Icon name='edit outline' /></Button>\r\n                  <Button className='deletePopup' icon > <Icon name='delete' /></Button>\r\n                  <Button  onClick = {this.dispatchShowVideoPlayer} icon className='videoPlayButton' > \r\n                     <Icon  size ='huge'  name='youtube play' /> \r\n                   </Button>\r\n                    <div className='myCenterTriangle'> </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </GridListTile>\r\n              \r\n            </div>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}