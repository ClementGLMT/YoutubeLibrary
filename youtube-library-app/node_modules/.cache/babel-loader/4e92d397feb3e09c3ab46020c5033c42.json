{"ast":null,"code":"import initialState from '../store/initialState';\nexport default function dataLoading(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_LEFTPANEL':\n      var rep = state;\n      rep.leftPanel.videos = action.payload.videos;\n      console.log(\"Received by Data reducer for toogle left : \" + JSON.stringify(rep));\n      return rep;\n\n    case 'UPDATE_RIGHTPANEL':\n      var rep = state;\n      rep.rightPanel.videos = action.payload.videos; //console.log(\"Received by Data reducer : \"+rep);\n\n      return rep;\n\n    case 'RESULTS_HAS_ERRORED':\n      return action.payload.hasErrored;\n\n    case 'RESULTS_ARE_LOADING':\n      return action.payload.isLoading;\n\n    case 'RESULTS_FETCH_DATA_SUCCESS':\n      return action.payload.results;\n\n    default:\n      //state;\n      //console.log(\"Returning by default : \"+JSON.stringify(state));\n      return state;\n  }\n}\n/*export function resultsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport function resultsAreLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_ARE_LOADING':\r\n            return action.isLoading;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport function results(state = [], action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_FETCH_DATA_SUCCESS':\r\n            return action.items;\r\n        default:\r\n            return state;\r\n    }\r\n}*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/reducers/dataLoading.js"],"names":["initialState","dataLoading","state","action","type","rep","leftPanel","videos","payload","console","log","JSON","stringify","rightPanel","hasErrored","isLoading","results"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,uBAAzB;AAEA,eAAe,SAASC,WAAT,CAAsBC,KAAK,GAAGF,YAA9B,EAA4CG,MAA5C,EAAqD;AAEhE,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,kBAAL;AACI,UAAIC,GAAG,GAAGH,KAAV;AACAG,MAAAA,GAAG,CAACC,SAAJ,CAAcC,MAAd,GAAuBJ,MAAM,CAACK,OAAP,CAAeD,MAAtC;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,gDAA8CC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAA1D;AACA,aAAOA,GAAP;;AAEJ,SAAK,mBAAL;AACI,UAAIA,GAAG,GAAGH,KAAV;AACAG,MAAAA,GAAG,CAACQ,UAAJ,CAAeN,MAAf,GAAwBJ,MAAM,CAACK,OAAP,CAAeD,MAAvC,CAFJ,CAGI;;AACA,aAAOF,GAAP;;AAEJ,SAAK,qBAAL;AACI,aAAOF,MAAM,CAACK,OAAP,CAAeM,UAAtB;;AAEJ,SAAK,qBAAL;AACI,aAAOX,MAAM,CAACK,OAAP,CAAeO,SAAtB;;AAEJ,SAAK,4BAAL;AACI,aAAOZ,MAAM,CAACK,OAAP,CAAeQ,OAAtB;;AAEJ;AACI;AACA;AACA,aAAOd,KAAP;AA1BR;AA6BH;AAED","sourcesContent":["import initialState from '../store/initialState';\r\n\r\nexport default function dataLoading (state = initialState, action)  {\r\n\r\n    switch(action.type) {\r\n\r\n        case 'UPDATE_LEFTPANEL':\r\n            var rep = state;\r\n            rep.leftPanel.videos = action.payload.videos;\r\n            console.log(\"Received by Data reducer for toogle left : \"+JSON.stringify(rep));\r\n            return rep;\r\n\r\n        case 'UPDATE_RIGHTPANEL':\r\n            var rep = state;\r\n            rep.rightPanel.videos = action.payload.videos;\r\n            //console.log(\"Received by Data reducer : \"+rep);\r\n            return rep;\r\n\r\n        case 'RESULTS_HAS_ERRORED':\r\n            return action.payload.hasErrored;\r\n\r\n        case 'RESULTS_ARE_LOADING':\r\n            return action.payload.isLoading;\r\n\r\n        case 'RESULTS_FETCH_DATA_SUCCESS':\r\n            return action.payload.results;\r\n\r\n        default:\r\n            //state;\r\n            //console.log(\"Returning by default : \"+JSON.stringify(state));\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n/*export function resultsHasErrored(state = false, action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_HAS_ERRORED':\r\n            return action.hasErrored;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport function resultsAreLoading(state = false, action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_ARE_LOADING':\r\n            return action.isLoading;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport function results(state = [], action) {\r\n    switch (action.type) {\r\n        case 'RESULTS_FETCH_DATA_SUCCESS':\r\n            return action.items;\r\n        default:\r\n            return state;\r\n    }\r\n}*/\r\n\r\n"]},"metadata":{},"sourceType":"module"}