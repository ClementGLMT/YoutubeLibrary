{"ast":null,"code":"import { store } from '../store';\n\nconst axios = require('axios'); //Update left and right lists\n\n\nexport function updateListReducerAction(panel, videos) {\n  switch (panel) {\n    case 'leftPanel':\n      return {\n        type: 'UPDATE_LEFTPANEL',\n        payload: {\n          videos\n        }\n      };\n\n    case 'rightPanel':\n      return {\n        type: 'UPDATE_RIGHTPANEL',\n        payload: {\n          videos\n        }\n      };\n\n    default:\n      return;\n  }\n} //For right panel transitions \n\nexport function toggleVisibleAction() {\n  var rep = {\n    type: 'TOOGLE_VISIBLE'\n  };\n  return rep;\n} //Right pannel display actions\n\nexport function showWelcomePanelAction(payload) {\n  var rep = {\n    type: 'SHOW_WELCOME',\n    payload\n  }; //rep.payload[lastDisp] = false;\n\n  console.log('Calling show welcome action, returned action : ' + JSON.stringify(rep));\n  return rep;\n}\nexport function showSearchAndResultsAction(payload) {\n  var rep = {\n    type: 'SHOW_SEARCH_AND_RESULTS',\n    payload\n  };\n  return rep;\n}\nexport function showVideoPlayerAction(payload) {\n  var rep = {\n    type: 'SHOW_VIDEO_PLAYER',\n    payload\n  };\n  return rep;\n} //Set user\n\nexport function setUserAction(value) {\n  return {\n    type: 'SET_USER',\n    payload: {\n      user: value\n    }\n  };\n} //Open or close the modal\n\nexport function openCloseModalAction(action, payload) {\n  switch (action) {\n    case 'open':\n      return {\n        type: 'OPEN_MODAL',\n        payload\n      };\n\n    case 'close':\n      return {\n        type: 'CLOSE_MODAL'\n      };\n\n    default:\n      return;\n  }\n} //Set is searching with the maximum results asked\n\nexport function isSearchingAction(bool, maxRes) {\n  return {\n    type: 'IS_SEARCHING',\n    payload: {\n      isSearching: bool,\n      maxRes\n    }\n  };\n} //Loading search results actions\n\nexport function resultsAreLoadingAction(bool) {\n  return {\n    type: 'RESULTS_ARE_LOADING',\n    payload: {\n      isLoading: bool\n    }\n  };\n}\nexport function resultsFetchDataSuccessAction(results) {\n  return {\n    type: 'RESULTS_FETCH_DATA_SUCCESS',\n    payload: {\n      results\n    }\n  };\n}\nexport function resultsHasErroredAction(bool) {\n  return {\n    type: 'RESULTS_HAS_ERRORED',\n    payload: {\n      hasErrored: bool\n    }\n  };\n}\nexport function errorAfterFiveSecondsAction() {\n  return () => {\n    setTimeout(() => {\n      store.dispatch(resultsHasErroredAction(true));\n    }, 5000);\n  };\n} //Middleware for supporting async states setting\n\nexport function resultsFetchDataAction(url, body) {\n  return () => {\n    store.dispatch(resultsAreLoadingAction(true));\n    axios.post(url, body).then(function (response) {\n      if (response.status !== 200) {\n        store.dispatch(resultsHasErroredAction(true));\n      }\n\n      store.dispatch(resultsAreLoadingAction(false));\n\n      if (response.data.status === 'No results') {\n        store.dispatch(resultsHasErroredAction(true));\n      } else {\n        var data = response.data;\n\n        for (let i = 0; i < data.videos.length; i++) {\n          data.videos[i]['subtitle'] = '';\n          data.videos[i]['isParsed'] = false;\n        }\n\n        store.dispatch(resultsHasErroredAction(false));\n        store.dispatch(resultsFetchDataSuccessAction(data.videos));\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/actions/index.js"],"names":["store","axios","require","updateListReducerAction","panel","videos","type","payload","toggleVisibleAction","rep","showWelcomePanelAction","console","log","JSON","stringify","showSearchAndResultsAction","showVideoPlayerAction","setUserAction","value","user","openCloseModalAction","action","isSearchingAction","bool","maxRes","isSearching","resultsAreLoadingAction","isLoading","resultsFetchDataSuccessAction","results","resultsHasErroredAction","hasErrored","errorAfterFiveSecondsAction","setTimeout","dispatch","resultsFetchDataAction","url","body","post","then","response","status","data","i","length","catch","err"],"mappings":"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","sourcesContent":["import {store} from '../store';\r\nconst axios = require('axios');\r\n\r\n//Update left and right lists\r\n\r\nexport function updateListReducerAction(panel, videos) {\r\n    switch(panel) {\r\n\r\n        case 'leftPanel':\r\n            return {\r\n                type: 'UPDATE_LEFTPANEL',\r\n                payload: {\r\n                    videos\r\n                }\r\n            }\r\n\r\n        case 'rightPanel':\r\n            return {\r\n                type: 'UPDATE_RIGHTPANEL',\r\n                payload: {\r\n                    videos\r\n                }\r\n            }\r\n\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\n//For right panel transitions \r\n\r\nexport function toggleVisibleAction() {\r\n    var rep = {\r\n        type: 'TOOGLE_VISIBLE'\r\n    }\r\n    return rep;\r\n}\r\n\r\n//Right pannel display actions\r\n\r\nexport function showWelcomePanelAction(payload) {\r\n\r\n    var rep = {\r\n        type: 'SHOW_WELCOME',\r\n        payload\r\n    }\r\n    //rep.payload[lastDisp] = false;\r\n    console.log('Calling show welcome action, returned action : '+JSON.stringify(rep))\r\n    return rep;\r\n\r\n}\r\n\r\nexport function showSearchAndResultsAction(payload) {\r\n\r\n    var rep = {\r\n        type: 'SHOW_SEARCH_AND_RESULTS',\r\n        payload\r\n    };    \r\n    return rep;\r\n\r\n}\r\n\r\nexport function showVideoPlayerAction(payload) {\r\n\r\n    var rep = {\r\n        type: 'SHOW_VIDEO_PLAYER',\r\n        payload\r\n    }\r\n    return rep;\r\n\r\n}\r\n\r\n//Set user\r\n\r\nexport function setUserAction(value) {\r\n    return {\r\n        type: 'SET_USER',\r\n        payload: {\r\n            user: value\r\n        }\r\n    }\r\n}\r\n\r\n//Open or close the modal\r\n\r\nexport function openCloseModalAction(action, payload) {\r\n\r\n    switch(action) {\r\n\r\n        case 'open':\r\n            return {\r\n                type: 'OPEN_MODAL',\r\n                payload\r\n            }\r\n\r\n        case 'close':\r\n            return {\r\n                type: 'CLOSE_MODAL'\r\n            }\r\n\r\n        default: \r\n            return;\r\n    }\r\n}\r\n\r\n//Set is searching with the maximum results asked\r\n\r\nexport function isSearchingAction(bool, maxRes) {\r\n\r\n    return {\r\n        type: 'IS_SEARCHING',\r\n        payload: {\r\n            isSearching: bool,\r\n            maxRes\r\n        }\r\n    }\r\n}\r\n\r\n//Loading search results actions\r\n\r\nexport function resultsAreLoadingAction(bool) {\r\n    return {\r\n        type: 'RESULTS_ARE_LOADING',\r\n        payload: {\r\n            isLoading: bool\r\n        }\r\n    };\r\n}\r\n\r\nexport function resultsFetchDataSuccessAction(results) {\r\n    return {\r\n        type: 'RESULTS_FETCH_DATA_SUCCESS',\r\n        payload: {\r\n            results,\r\n        }\r\n    };\r\n}\r\n\r\nexport function resultsHasErroredAction(bool) {\r\n    return {\r\n        type: 'RESULTS_HAS_ERRORED',\r\n        payload: {\r\n            hasErrored: bool\r\n        }\r\n    };\r\n}\r\n\r\nexport function errorAfterFiveSecondsAction() {\r\n    return () => {\r\n        setTimeout(() => {\r\n            store.dispatch(resultsHasErroredAction(true));\r\n        }, 5000);\r\n    };\r\n}\r\n\r\n//Middleware for supporting async states setting\r\n\r\nexport function resultsFetchDataAction(url, body) {\r\n    return () => {\r\n        store.dispatch(resultsAreLoadingAction(true));\r\n        axios.post(url, body)\r\n        .then(function(response) {\r\n            if(response.status !== 200){\r\n                store.dispatch(resultsHasErroredAction(true));\r\n\r\n            }\r\n            store.dispatch(resultsAreLoadingAction(false));\r\n            if(response.data.status === 'No results') {\r\n                store.dispatch(resultsHasErroredAction(true));\r\n            }\r\n            else {\r\n                var data = response.data;\r\n                for (let i = 0; i < data.videos.length; i++) {\r\n                    data.videos[i]['subtitle'] = '';\r\n                    data.videos[i]['isParsed'] = false;\r\n                }\r\n                store.dispatch(resultsHasErroredAction(false));\r\n                store.dispatch(resultsFetchDataSuccessAction(data.videos));\r\n            }\r\n        })\r\n        .catch( function(err) {\r\n            console.log(err);\r\n        })\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}