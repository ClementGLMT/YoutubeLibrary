{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videolist.js\";\nimport React from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport tileData from './tileData';\nimport VideoTile from './videoTile';\nimport { store } from '../store';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport { modalAction } from '../actions';\nimport './components.css';\nimport 'semantic-ui-css/semantic.min.css';\nexport default class VideoList extends React.Component {\n  getTitleAndSubtitle(title) {\n    var subtitle = '';\n    var fullTitle = title;\n\n    if (title.length > 41) {\n      var arr = title.split(' ');\n      title = ''; //console.log(arr);\n\n      var i = 0;\n\n      while (title.length + arr[i].length < 40) {\n        title = title.concat(arr[i]);\n        title = title.concat(' '); //console.log(\"Title = \"+ title+\" for i = \"+i);\n\n        i++;\n      } //console.log(\"break for i = \"+i);\n\n\n      for (let j = i; j < arr.length; j++) {\n        subtitle = subtitle.concat(arr[j]);\n        subtitle = subtitle.concat(' '); //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\n      }\n\n      return {\n        title: title,\n        subtitle: subtitle\n      };\n    }\n\n    return {\n      title: fullTitle,\n      subtitle: ''\n    };\n  }\n\n  closeModal() {\n    store.dispatch(modalAction('close'));\n  }\n\n  render() {\n    var data;\n\n    if (this.props.isDataLoaded === 0) {\n      console.log(\"Loading tileData\");\n      data = tileData;\n    } else {\n      console.log(\"Loading propsData\");\n      data = this.props.data;\n    } //console.log('Title : '+data.title);\n\n\n    var data2 = [];\n\n    for (let i = 0; i < data.length; i++) {\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\n      data[i].title = data2[i].title;\n      data[i].subtitle = data2[i].subtitle;\n    } //console.log(\"Data in videoList : \"+JSON.stringify(data));\n\n\n    return React.createElement(\"div\", {\n      className: 'root' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 180,\n      className: 'gridList' + this.props.side,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, data.map(tile => React.createElement(VideoTile, {\n      side: this.props.side,\n      key: tile.id,\n      data: tile,\n      gridTileClass: 'gridTile' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(Modal, {\n      style: {\n        marginBottom: '10px'\n      },\n      dimmer: store.getState().ModalReducer.dimmer,\n      open: store.getState().ModalReducer.isModalOpen,\n      onClose: this.closeModal,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, store.getState().ModalReducer.video.title), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: store.getState().ModalReducer.video.thumbnails.medium.url,\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"What's the new name of your video ?\"), React.createElement(Input, {\n      onChange: (event, data) => {\n        this.inputName = data.value;\n      },\n      placeholder: \"New name\",\n      style: {\n        marginTop: '28.375px',\n        marginLeft: '56.55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Confirm\",\n      onClick: () => {\n        alert(this.inputName);\n        this.closeModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))));\n  }\n\n}\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videolist.js"],"names":["React","GridList","tileData","VideoTile","store","Icon","Header","Button","Image","Modal","Input","modalAction","VideoList","Component","getTitleAndSubtitle","title","subtitle","fullTitle","length","arr","split","i","concat","j","closeModal","dispatch","render","data","props","isDataLoaded","console","log","data2","side","map","tile","id","marginBottom","getState","ModalReducer","dimmer","isModalOpen","video","thumbnails","medium","url","marginLeft","marginRight","event","inputName","value","marginTop","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport tileData from './tileData';\r\nimport VideoTile from './videoTile'\r\nimport {store} from '../store';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport {modalAction} from '../actions';\r\nimport './components.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\n\r\nexport default class VideoList extends React.Component {\r\n\r\n\r\n  getTitleAndSubtitle(title) {\r\n\r\n    var subtitle='';\r\n    var fullTitle = title;\r\n    if(title.length > 41){\r\n      var arr = title.split(' ');\r\n      title = '';\r\n      //console.log(arr);\r\n      var i=0;\r\n      while ((title.length + arr[i].length) < 40) {\r\n        title = title.concat(arr[i]);\r\n        title = title.concat(' ');\r\n        //console.log(\"Title = \"+ title+\" for i = \"+i);\r\n          i++;\r\n      }\r\n      //console.log(\"break for i = \"+i);\r\n\r\n      for (let j = i; j < arr.length;j++) {\r\n        subtitle = subtitle.concat(arr[j]);  \r\n        subtitle = subtitle.concat(' ');\r\n        //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\r\n      }\r\n      return {\r\n        title: title,\r\n        subtitle: subtitle\r\n      }\r\n    }\r\n    return {\r\n      title: fullTitle,\r\n      subtitle: ''\r\n    }\r\n\r\n  }\r\n\r\n  closeModal() {\r\n    store.dispatch(modalAction('close'));\r\n  }\r\n  \r\n\r\n  render(){\r\n\r\n    var data;\r\n    if(this.props.isDataLoaded === 0){\r\n      console.log(\"Loading tileData\");\r\n      data = tileData;\r\n    }\r\n    else {\r\n      console.log(\"Loading propsData\");\r\n      data = this.props.data;\r\n    }\r\n\r\n    //console.log('Title : '+data.title);\r\n    var data2 = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\r\n      data[i].title = data2[i].title;\r\n      data[i].subtitle = data2[i].subtitle;      \r\n    }\r\n\r\n\r\n    //console.log(\"Data in videoList : \"+JSON.stringify(data));\r\n\r\n    return (\r\n        <div className={'root'+this.props.side} >\r\n          <GridList cellHeight={180} className={'gridList'+this.props.side} cols={1}>\r\n            {data.map(tile => (\r\n          \r\n                <VideoTile side={this.props.side} key={tile.id} data={tile} gridTileClass= {'gridTile'+this.props.side} />\r\n            \r\n            ))}\r\n          </GridList>\r\n\r\n          <Modal style = {{marginBottom: '10px'}} dimmer={store.getState().ModalReducer.dimmer} open={store.getState().ModalReducer.isModalOpen} onClose={this.closeModal} size='small'>\r\n                <Modal.Header>{store.getState().ModalReducer.video.title}</Modal.Header>\r\n                <Modal.Content image>\r\n                  <Image\r\n                    wrapped\r\n                    size='medium'\r\n                    src={store.getState().ModalReducer.video.thumbnails.medium.url}\r\n                    className = 'medium'\r\n                  />\r\n                  <Modal.Description>\r\n                    <Header style={{marginLeft: 'auto', marginRight: 'auto'}} >What's the new name of your video ?</Header>\r\n                      <Input onChange={(event,data)=> {this.inputName = data.value}} placeholder='New name' style={{marginTop: '28.375px', marginLeft: '56.55px'}}/>\r\n                  </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                  <Button negative onClick={this.closeModal}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    positive\r\n                    icon='checkmark'\r\n                    labelPosition='right'\r\n                    content=\"Confirm\"\r\n                    onClick={() => {alert(this.inputName);  this.closeModal();}}\r\n                  />\r\n                </Modal.Actions>\r\n              </Modal>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/"]},"metadata":{},"sourceType":"module"}