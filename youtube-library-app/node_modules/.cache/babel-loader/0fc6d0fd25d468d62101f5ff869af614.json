{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\LeftPanel\\\\leftPanel.js\";\nimport React from 'react';\nimport VideoList from '../Common/videolist';\nimport { Header, Image, Modal, Input, Button } from 'semantic-ui-react';\nimport Search from './search';\nimport './components.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { store } from '../../store';\nimport { toast } from 'react-toastify';\nimport { updateListReducerAction, openCloseModalAction } from '../../actions';\n\nconst axios = require('axios');\n\nexport default class leftPanel extends React.Component {\n  getLibraryContent() {\n    //Get the user's library \n    var context = this;\n    var data = {\n      name: '',\n      videos: []\n    };\n    var libraryURL = 'http://localhost:2999/data'; //Get to the API page\n\n    axios.get(libraryURL, {\n      params: {\n        user: store.getState().User.user\n      }\n    }).then(function (response) {\n      data = response.data.videos;\n\n      for (let i = 0; i < data.length; i++) {\n        //Set videos to VideoList Tile format\n        data[i]['isParsed'] = false;\n        data[i]['subtitle'] = '';\n      }\n\n      context.dispatchUpdateList('leftPanel', data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.getLibraryContent();\n  }\n\n  dispatchUpdateList(panel, videos) {\n    //Update state with the new list\n    store.dispatch(updateListReducerAction(panel, videos));\n  }\n\n  closeModal() {\n    store.dispatch(openCloseModalAction('close'));\n  }\n\n  handlePositiveClick() {\n    //handle renaming by clicking on the modal's confirm button \n    var self = this;\n    axios.post('http://localhost:2999/rename', {\n      //Post to the API to apply modifications\n      body: {\n        videoid: store.getState().Modal.video.id,\n        newtitle: this.inputName,\n        user: store.getState().User.user\n      }\n    }).then(function (response) {\n      self.dispatchUpdateList('leftPanel', response.data.videos); //Set state with new video list\n    }).catch(function (err) {\n      console.log(err);\n    });\n    this.closeModal();\n    toast.success(\"Video renamed !\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"leftPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      className: \"libraryName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Image, {\n      size: \"mini\",\n      circular: true,\n      src: \"https://image.noelshack.com/fichiers/2020/12/4/1584657095-miniytlogo.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \" \", store.getState().User.user, \"'s library\"), React.createElement(Search, {\n      className: \"search\",\n      style: {\n        height: '10%',\n        width: '340px',\n        margin: '0 auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(VideoList, {\n      className: \"videoList\",\n      side: \"OnLeft\",\n      user: store.getState().User.user,\n      data: store.getState().DataLoading.leftPanel.videos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      style: {\n        marginBottom: '10px'\n      },\n      dimmer: store.getState().Modal.dimmer,\n      open: store.getState().Modal.isOpen,\n      onClose: this.closeModal,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, store.getState().Modal.video.title), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: store.getState().Modal.video.thumbnails.medium.url,\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"What's the new name of your video ?\"), React.createElement(Input, {\n      onChange: (event, data) => {\n        this.inputName = data.value;\n      },\n      placeholder: \"New name\",\n      style: {\n        marginTop: '28.375px',\n        marginLeft: '56.55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Confirm\",\n      onClick: () => {\n        this.handlePositiveClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))));\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/LeftPanel/leftPanel.js"],"names":["React","VideoList","Header","Image","Modal","Input","Button","Search","store","toast","updateListReducerAction","openCloseModalAction","axios","require","leftPanel","Component","getLibraryContent","context","data","name","videos","libraryURL","get","params","user","getState","User","then","response","i","length","dispatchUpdateList","catch","err","console","log","componentDidMount","panel","dispatch","closeModal","handlePositiveClick","self","post","body","videoid","video","id","newtitle","inputName","success","render","height","width","margin","DataLoading","marginBottom","dimmer","isOpen","title","thumbnails","medium","url","marginLeft","marginRight","event","value","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport VideoList from '../Common/videolist';\r\nimport { Header, Image, Modal, Input, Button } from 'semantic-ui-react';\r\nimport Search from './search'; \r\nimport './components.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { store} from '../../store';\r\nimport {toast} from 'react-toastify';\r\nimport {updateListReducerAction, openCloseModalAction} from '../../actions';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\nexport default class leftPanel extends React.Component{\r\n\r\n\r\n      getLibraryContent() {       //Get the user's library \r\n        var context = this;\r\n        var data = {name: '', videos: []};\r\n        var libraryURL = 'http://localhost:2999/data';    //Get to the API page\r\n        axios.get(libraryURL, {\r\n            params: {\r\n                user: store.getState().User.user,\r\n            }\r\n        })\r\n        .then( function (response) { \r\n            data = response.data.videos;\r\n            for (let i = 0; i < data.length; i++) {       //Set videos to VideoList Tile format\r\n                data[i]['isParsed'] = false;\r\n                data[i]['subtitle'] = '';\r\n            }\r\n            context.dispatchUpdateList('leftPanel', data);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n   componentDidMount(){\r\n        this.getLibraryContent();\r\n    }\r\n\r\n\r\n    dispatchUpdateList(panel, videos) {                 //Update state with the new list\r\n        store.dispatch(updateListReducerAction(panel, videos));\r\n    }\r\n\r\n      closeModal() {\r\n        store.dispatch(openCloseModalAction('close'));\r\n      }\r\n\r\n      handlePositiveClick() {                           //handle renaming by clicking on the modal's confirm button \r\n        var self = this;\r\n        axios.post('http://localhost:2999/rename', {    //Post to the API to apply modifications\r\n            body: {\r\n                videoid: store.getState().Modal.video.id,\r\n                newtitle: this.inputName,\r\n                user: store.getState().User.user\r\n            }\r\n        })\r\n        .then(function(response) {\r\n            self.dispatchUpdateList('leftPanel', response.data.videos); //Set state with new video list\r\n        })\r\n        .catch (function(err) {\r\n            console.log(err);\r\n        })\r\n\r\n        this.closeModal();\r\n        toast.success(\"Video renamed !\");\r\n      }\r\n\r\n    render(){\r\n\r\n            return (\r\n                <div className='leftPanel'>\r\n                    <Header className='libraryName'>\r\n                        <Image size='mini' circular src='https://image.noelshack.com/fichiers/2020/12/4/1584657095-miniytlogo.png' /> {store.getState().User.user}'s library\r\n                    </Header>\r\n                    <Search className='search' style={{ height: '10%', width: '340px', margin: '0 auto' }}/>\r\n\r\n                    <VideoList className='videoList' side='OnLeft' user={store.getState().User.user} data= {store.getState().DataLoading.leftPanel.videos}/>\r\n\r\n                    <Modal style = {{marginBottom: '10px'}} dimmer={store.getState().Modal.dimmer} open={store.getState().Modal.isOpen} onClose={this.closeModal} size='small'>\r\n                      <Modal.Header>{store.getState().Modal.video.title}</Modal.Header>\r\n                      <Modal.Content image>\r\n                        <Image\r\n                          wrapped\r\n                          size='medium'\r\n                          src={store.getState().Modal.video.thumbnails.medium.url}\r\n                          className = 'medium'\r\n                        />\r\n                        <Modal.Description>\r\n                          <Header style={{marginLeft: 'auto', marginRight: 'auto'}} >What's the new name of your video ?</Header>\r\n                          <Input onChange={(event,data)=> {this.inputName = data.value}} placeholder='New name' style={{marginTop: '28.375px', marginLeft: '56.55px'}}/>\r\n                        </Modal.Description>\r\n                      </Modal.Content>\r\n                      <Modal.Actions>\r\n                        <Button negative onClick={this.closeModal}>\r\n                          Cancel\r\n                        </Button>\r\n                        <Button\r\n                          positive\r\n                          icon='checkmark'\r\n                          labelPosition='right'\r\n                          content=\"Confirm\"\r\n                          onClick={() => {this.handlePositiveClick();}}\r\n                        />\r\n                      </Modal.Actions>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n\r\n\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}