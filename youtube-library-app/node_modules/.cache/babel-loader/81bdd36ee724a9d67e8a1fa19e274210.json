{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\rightSearchResults.js\";\nimport React from 'react';\nimport VideoList from './videolist';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Image } from 'semantic-ui-react';\nimport SearchForm from './searchForm';\nimport './components.css';\nimport { store } from '../store';\nimport tileData from './tileData';\nexport default class RightSearchResults extends React.Component {\n  render() {\n    var state = store.getState().DataLoading.rightPanel;\n    var data = [];\n\n    if (state.isSearching.search && state.isLoading) {\n      //load loading tiles if results are loading and if the user searches for something\n      for (let i = 0; i < state.isSearching.maxRes; i++) {\n        data[i] = tileData[i];\n      }\n    }\n\n    if (state.isSearching.search && !state.isLoading) {\n      //load results if they are loaded\n      data = state.videos;\n    }\n\n    let results;\n\n    if (!state.hasErrored) {\n      //Show the VideoList if no error occured (here hasErrored is toggled is the backend sent us a status: 'No results' in response)\n      results = React.createElement(VideoList, {\n        side: \"OnRight\",\n        data: data,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    } else {\n      //If an error occured (so if we have no results), Show no results image       \n      results = React.createElement(\"div\", {\n        className: \"noResults\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Image, {\n        className: \"noResultsImage\",\n        src: \"https://image.noelshack.com/fichiers/2020/13/4/1585248583-no-res-det.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"searchContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"searchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(SearchForm, {\n      className: \"searchForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), results);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/rightSearchResults.js"],"names":["React","VideoList","Image","SearchForm","store","tileData","RightSearchResults","Component","render","state","getState","DataLoading","rightPanel","data","isSearching","search","isLoading","i","maxRes","videos","results","hasErrored"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,kCAAP;AACA,SAAQC,KAAR,QAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,kBAAP;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAIA,eAAe,MAAMC,kBAAN,SAAiCN,KAAK,CAACO,SAAvC,CAAiD;AAG5DC,EAAAA,MAAM,GAAI;AAEN,QAAIC,KAAK,GAAGL,KAAK,CAACM,QAAN,GAAiBC,WAAjB,CAA6BC,UAAzC;AAEA,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAGJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,IAA4BN,KAAK,CAACO,SAArC,EAA+C;AAAY;AACvD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACK,WAAN,CAAkBI,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CJ,QAAAA,IAAI,CAACI,CAAD,CAAJ,GAAUZ,QAAQ,CAACY,CAAD,CAAlB;AACH;AACJ;;AAED,QAAGR,KAAK,CAACK,WAAN,CAAkBC,MAAlB,IAA4B,CAACN,KAAK,CAACO,SAAtC,EAAiD;AAAW;AACxDH,MAAAA,IAAI,GAAGJ,KAAK,CAACU,MAAb;AACH;;AAED,QAAIC,OAAJ;;AAEA,QAAG,CAACX,KAAK,CAACY,UAAV,EAAqB;AAAuC;AACxDD,MAAAA,OAAO,GAAG,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAC,SAAhB;AAA0B,QAAA,IAAI,EAAEP,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACH,KAFD,MAGK;AAAwD;AACzDO,MAAAA,OAAO,GAAG;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAG,gBAAnB;AAAoC,QAAA,GAAG,EAAC,0EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,CAAV;AAGH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAISA,OAJT,CADJ;AASH;;AAvC2D","sourcesContent":["import React from 'react';\r\nimport VideoList from './videolist';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport {Image} from 'semantic-ui-react';\r\nimport SearchForm from './searchForm';\r\nimport './components.css';\r\nimport {store} from '../store';\r\nimport tileData from './tileData';\r\n\r\n\r\n\r\nexport default class RightSearchResults extends React.Component {\r\n\r\n\r\n    render()  {\r\n\r\n        var state = store.getState().DataLoading.rightPanel;\r\n\r\n        var data = [];\r\n\r\n        if(state.isSearching.search && state.isLoading){           //load loading tiles if results are loading and if the user searches for something\r\n            for (let i = 0; i < state.isSearching.maxRes; i++) {\r\n                data[i] = tileData[i];\r\n            }\r\n        }\r\n\r\n        if(state.isSearching.search && !state.isLoading) {          //load results if they are loaded\r\n            data = state.videos;\r\n        }\r\n\r\n        let results;\r\n\r\n        if(!state.hasErrored){                                      //Show the VideoList if no error occured (here hasErrored is toggled is the backend sent us a status: 'No results' in response)\r\n            results = <VideoList side='OnRight' data={data}/>;\r\n        }\r\n        else {                                                       //If an error occured (so if we have no results), Show no results image       \r\n            results = <div className='noResults'>\r\n                <Image className = 'noResultsImage' src='https://image.noelshack.com/fichiers/2020/13/4/1585248583-no-res-det.png'/>\r\n            </div>\r\n        }\r\n\r\n        return(\r\n            <div className='searchContainer'>\r\n                <div className = 'searchForm'> \r\n                    <SearchForm className='searchForm'/>\r\n                </div>\r\n                    {results}\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}