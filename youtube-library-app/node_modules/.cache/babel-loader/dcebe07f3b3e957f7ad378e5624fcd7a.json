{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videoTile.js\";\nimport React from 'react';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport { store } from '../store';\nimport { showVideoPlayer, modalAction } from '../actions';\nimport 'semantic-ui-css/semantic.min.css';\nimport './components.css';\nexport default class VideoTile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.show = () => () => this.setState({\n      dimmer: 'blurring',\n      open: true\n    });\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.inputName = '';\n  }\n\n  openModal() {\n    store.dispatch(modalAction('open'));\n  }\n\n  closeModal() {\n    store.dispatch(modalAction('close'));\n  }\n\n  dispatchShowVideoPlayer() {\n    var lastDisp;\n    var actualRightDisp = store.getState().ShowOnRight;\n    console.log(\"Previous right panel state \" + JSON.stringify(actualRightDisp));\n\n    for (var k in actualRightDisp) {\n      if (actualRightDisp[k] === 1) lastDisp = k;\n    }\n\n    console.log(\"LastDisp : \" + lastDisp);\n    console.log(\"Previous right panel state modified \" + JSON.stringify(actualRightDisp));\n    store.dispatch(showVideoPlayer(lastDisp));\n  }\n\n  render() {\n    const {\n      open,\n      dimmer\n    } = this.state;\n    var thumbsize;\n    if (this.props.side === 'OnLeft') thumbsize = 'medium';else thumbsize = 'high';\n    console.log(this.state); //console.log(\"Loading tie with data (thumbsize = \"+thumbsize+\")= \"+JSON.stringify(this.props.data));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(GridListTile, {\n      key: this.props.data.id,\n      cols: 1,\n      className: this.props.gridTileClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.data.thumbnails[thumbsize].url,\n      className: this.props.side,\n      alt: this.props.data.title.concat(this.props.data.subtitle),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(GridListTileBar, {\n      title: this.props.data.title,\n      subtitle: this.props.data.subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.props.side === 'OnLeft' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"editPopup\",\n      icon: true,\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"edit outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"deletePopup\",\n      icon: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" \", React.createElement(Icon, {\n      name: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.dispatchShowVideoPlayer,\n      icon: true,\n      className: \"videoPlayButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      size: \"huge\",\n      name: \"youtube play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"myCenterTriangle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \"))), React.createElement(Modal, {\n      style: {\n        marginBottom: '10px'\n      },\n      dimmer: store.getState().ModalState.dimmer,\n      open: store.getState().ModalState.isModalOpen,\n      onClose: this.closeModal,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.data.title.concat(this.props.data.subtitle)), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: this.props.data.thumbnails.medium.url,\n      className: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        marginLeft: 'auto',\n        marginRight: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"What's the new name of your video ?\"), React.createElement(Input, {\n      onChange: (event, data) => {\n        this.inputName = data.value;\n      },\n      placeholder: \"New name\",\n      style: {\n        marginTop: '28.375px',\n        marginLeft: '56.55px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      negative: true,\n      onClick: this.closeModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Confirm\",\n      onClick: () => {\n        alert(this.inputName);\n        this.closeModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videoTile.js"],"names":["React","GridListTile","GridListTileBar","Icon","Header","Button","Image","Modal","Input","store","showVideoPlayer","modalAction","VideoTile","Component","constructor","props","state","open","show","setState","dimmer","close","inputName","openModal","dispatch","closeModal","dispatchShowVideoPlayer","lastDisp","actualRightDisp","getState","ShowOnRight","console","log","JSON","stringify","k","render","thumbsize","side","data","id","gridTileClass","thumbnails","url","title","concat","subtitle","marginBottom","ModalState","isModalOpen","medium","marginLeft","marginRight","event","value","marginTop","alert"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport {store} from '../store';\r\nimport {showVideoPlayer, modalAction} from '../actions';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './components.css';\r\n\r\n\r\n\r\n\r\nexport default class VideoTile extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n\r\n      this.inputName = '';\r\n\r\n\r\n    }\r\n\r\n\r\n    state = { open: false }\r\n\r\n    show = () => () => this.setState({ dimmer: 'blurring', open: true })\r\n    close = () => this.setState({ open: false })\r\n\r\n    openModal(){\r\n      store.dispatch(modalAction('open'));\r\n    }\r\n\r\n    closeModal() {\r\n      store.dispatch(modalAction('close'));\r\n    }\r\n\r\n    dispatchShowVideoPlayer() {\r\n      var lastDisp;\r\n      var actualRightDisp = store.getState().ShowOnRight;\r\n      console.log(\"Previous right panel state \"+JSON.stringify(actualRightDisp))\r\n      for(var k in actualRightDisp) {\r\n        if(actualRightDisp[k] === 1)\r\n          lastDisp = k ;\r\n     }\r\n     console.log(\"LastDisp : \"+lastDisp);\r\n     console.log(\"Previous right panel state modified \"+JSON.stringify(actualRightDisp))\r\n      store.dispatch(showVideoPlayer(lastDisp));\r\n    }\r\n\r\n      render() {\r\n\r\n        const { open, dimmer } = this.state;\r\n\r\n        var thumbsize;\r\n        if(this.props.side === 'OnLeft')\r\n          thumbsize = 'medium';\r\n        else \r\n          thumbsize = 'high';\r\n\r\n        console.log(this.state);\r\n\r\n        \r\n        //console.log(\"Loading tie with data (thumbsize = \"+thumbsize+\")= \"+JSON.stringify(this.props.data));\r\n\r\n        return(\r\n\r\n          <div>\r\n            <GridListTile  key={this.props.data.id} cols={1} className={this.props.gridTileClass}>\r\n                <img src={this.props.data.thumbnails[thumbsize].url} className={this.props.side} alt={this.props.data.title.concat(this.props.data.subtitle)}/>\r\n                <GridListTileBar title={this.props.data.title} subtitle={this.props.data.subtitle} >\r\n                </GridListTileBar>\r\n\r\n                { (this.props.side === 'OnLeft') &&\r\n                <div>\r\n                  <Button className='editPopup' icon onClick={this.openModal}> <Icon name='edit outline' /></Button>\r\n                  <Button className='deletePopup' icon > <Icon name='delete' /></Button>\r\n                  <Button  onClick = {this.dispatchShowVideoPlayer} icon className='videoPlayButton' > \r\n                     <Icon  size ='huge'  name='youtube play' /> \r\n                   </Button>\r\n                    <div className='myCenterTriangle'> </div>\r\n                    </div>\r\n                }\r\n\r\n\r\n            </GridListTile>\r\n\r\n            <Modal style = {{marginBottom: '10px'}} dimmer={store.getState().ModalState.dimmer} open={store.getState().ModalState.isModalOpen} onClose={this.closeModal} size='small'>\r\n                <Modal.Header>{this.props.data.title.concat(this.props.data.subtitle)}</Modal.Header>\r\n                <Modal.Content image>\r\n                  <Image\r\n                    wrapped\r\n                    size='medium'\r\n                    src={this.props.data.thumbnails.medium.url}\r\n                    className = 'medium'\r\n                  />\r\n                  <Modal.Description>\r\n                    <Header style={{marginLeft: 'auto', marginRight: 'auto'}} >What's the new name of your video ?</Header>\r\n                      <Input onChange={(event,data)=> {this.inputName = data.value}} placeholder='New name' style={{marginTop: '28.375px', marginLeft: '56.55px'}}/>\r\n                  </Modal.Description>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                  <Button negative onClick={this.closeModal}>\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    positive\r\n                    icon='checkmark'\r\n                    labelPosition='right'\r\n                    content=\"Confirm\"\r\n                    onClick={() => {alert(this.inputName);  this.closeModal();}}\r\n                  />\r\n                </Modal.Actions>\r\n              </Modal>\r\n              \r\n            </div>\r\n\r\n        );\r\n      }\r\n\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}