{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videolist.js\";\nimport React from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport tileData from './tileData';\nimport VideoTile from './videoTile';\nimport './components.css';\nimport 'semantic-ui-css/semantic.min.css';\nexport default class VideoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: this.props.user\n    };\n  }\n\n  getTitleAndSubtitle(title) {\n    var subtitle = '';\n    var fullTitle = title;\n\n    if (title.length > 41) {\n      var arr = title.split(' ');\n      title = ''; //console.log(arr);\n\n      var i = 0;\n\n      while (title.length + arr[i].length < 40) {\n        title = title.concat(arr[i]);\n        title = title.concat(' '); //console.log(\"Title = \"+ title+\" for i = \"+i);\n\n        i++;\n      }\n\n      console.log(\"break for i = \" + i);\n\n      for (let j = i; j < arr.length; j++) {\n        subtitle = subtitle.concat(arr[j]);\n        subtitle = subtitle.concat(' '); //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\n      }\n\n      return {\n        title: title,\n        subtitle: subtitle\n      };\n    }\n\n    return {\n      title: fullTitle,\n      subtitle: ''\n    };\n  }\n\n  render() {\n    var data;\n\n    if (this.props.isDataLoaded === 0) {\n      console.log(\"Loading tileData\");\n      data = tileData;\n    } else {\n      console.log(\"Loading propsData\");\n      data = this.props.data;\n    } //console.log('Title : '+data.title);\n\n\n    var data2 = [];\n\n    for (let i = 0; i < data.length; i++) {\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\n      data[i].title = data2[i].title;\n      data[i].subtitle = data2[i].subtitle;\n    } //console.log(\"Data in videoList : \"+JSON.stringify(data));\n\n\n    return React.createElement(\"div\", {\n      className: 'root' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 180,\n      className: 'gridList' + this.props.side,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, data.map(tile => React.createElement(VideoTile, {\n      side: this.props.side,\n      key: tile.id,\n      data: tile,\n      gridTileClass: 'gridTile' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n  }\n\n}\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videolist.js"],"names":["React","GridList","tileData","VideoTile","VideoList","Component","constructor","props","state","user","getTitleAndSubtitle","title","subtitle","fullTitle","length","arr","split","i","concat","console","log","j","render","data","isDataLoaded","data2","side","map","tile","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport tileData from './tileData';\r\nimport VideoTile from './videoTile'\r\nimport './components.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\n\r\nexport default class VideoList extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: this.props.user,\r\n    }\r\n  }\r\n\r\n  getTitleAndSubtitle(title) {\r\n\r\n    var subtitle='';\r\n    var fullTitle = title;\r\n    if(title.length > 41){\r\n      var arr = title.split(' ');\r\n      title = '';\r\n      //console.log(arr);\r\n      var i=0;\r\n      while ((title.length + arr[i].length) < 40) {\r\n        title = title.concat(arr[i]);\r\n        title = title.concat(' ');\r\n        //console.log(\"Title = \"+ title+\" for i = \"+i);\r\n          i++;\r\n      }\r\n      console.log(\"break for i = \"+i);\r\n\r\n      for (let j = i; j < arr.length;j++) {\r\n        subtitle = subtitle.concat(arr[j]);  \r\n        subtitle = subtitle.concat(' ');\r\n        //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\r\n      }\r\n      return {\r\n        title: title,\r\n        subtitle: subtitle\r\n      }\r\n    }\r\n    return {\r\n      title: fullTitle,\r\n      subtitle: ''\r\n    }\r\n\r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n\r\n    var data;\r\n    if(this.props.isDataLoaded === 0){\r\n      console.log(\"Loading tileData\");\r\n      data = tileData;\r\n    }\r\n    else {\r\n      console.log(\"Loading propsData\");\r\n      data = this.props.data;\r\n    }\r\n\r\n    //console.log('Title : '+data.title);\r\n    var data2 = [];\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      data2[i] = this.getTitleAndSubtitle(data[i].title);\r\n      data[i].title = data2[i].title;\r\n      data[i].subtitle = data2[i].subtitle;      \r\n    }\r\n\r\n\r\n    //console.log(\"Data in videoList : \"+JSON.stringify(data));\r\n\r\n    return (\r\n        <div className={'root'+this.props.side} >\r\n          <GridList cellHeight={180} className={'gridList'+this.props.side} cols={1}>\r\n            {data.map(tile => (\r\n          \r\n                <VideoTile side={this.props.side} key={tile.id} data={tile} gridTileClass= {'gridTile'+this.props.side} />\r\n            \r\n            ))}\r\n          </GridList>\r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/"]},"metadata":{},"sourceType":"module"}