{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\searchForm.js\";\nimport React from 'react';\nimport options from './maxresults';\nimport { Form } from 'semantic-ui-react';\nimport './components.css';\nimport { updateListReducer, resultsFetchData, isSearching } from '../actions';\nimport { store } from '../store';\n\nconst axios = require('axios');\n\nexport default class searchForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputSearch = '';\n    this.maxRes = 0;\n    this.data = [];\n  }\n\n  handleSubmit() {\n    var self = this;\n    store.dispatch(isSearching(true, this.maxRes)); //var data;\n\n    console.log(resultsFetchData('http://localhost:2999/search', {\n      body: {\n        maxResults: self.maxRes,\n        keyword: self.inputSearch\n      }\n    }));\n    var action = resultsFetchData('http://localhost:2999/search', {\n      maxResults: self.maxRes,\n      keyword: self.inputSearch\n    });\n    console.log(\"ACTION :\" + action);\n    action();\n    store.dispatch(resultsFetchData('http://localhost:2999/search', {\n      body: {\n        maxResults: self.maxRes,\n        keyword: self.inputSearch\n      }\n    })); //console.log(\"Submitting search: search = \"+this.inputSearch+\" max = \"+this.maxRes);\n\n    axios.post('http://localhost:2999/search', {\n      maxResults: self.maxRes,\n      keyword: self.inputSearch\n    }).then(function (response) {\n      console.log(JSON.stringify(response.data)); //self.data = response.data;\n\n      self.dispatchUpdateList('righPanel', response.data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"Dispatching data in component did mount: \" + JSON.stringify(this.data));\n  }\n\n  dispatchUpdateList(panel, videos) {\n    if (this.data !== []) {\n      store.dispatch(updateListReducer(panel, videos));\n    }\n  }\n\n  componentWillUnmount() {\n    store.dispatch(isSearching(false));\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: () => {\n        this.handleSubmit();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      onChange: (event, data) => {\n        this.inputSearch = data.value;\n      },\n      label: \"Your search\",\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Form.Select, {\n      fluid: true,\n      label: \"How many results ?\",\n      options: options,\n      placeholder: \"How many results ?\",\n      onChange: (event, data) => {\n        this.maxRes = data.value;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/searchForm.js"],"names":["React","options","Form","updateListReducer","resultsFetchData","isSearching","store","axios","require","searchForm","Component","constructor","props","inputSearch","maxRes","data","handleSubmit","self","dispatch","console","log","body","maxResults","keyword","action","post","then","response","JSON","stringify","dispatchUpdateList","catch","err","componentDidMount","panel","videos","componentWillUnmount","render","event","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport options from './maxresults';\r\nimport { Form } from 'semantic-ui-react';\r\nimport './components.css';\r\nimport {updateListReducer, resultsFetchData, isSearching} from '../actions';\r\nimport { store } from '../store';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\n\r\n\r\nexport default class searchForm extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.inputSearch = '';\r\n        this.maxRes = 0;\r\n        this.data= [];\r\n    }\r\n\r\n    handleSubmit(){\r\n        var self = this;\r\n        store.dispatch(isSearching(true, this.maxRes));\r\n        //var data;\r\n        console.log(resultsFetchData('http://localhost:2999/search', {\r\n            body: {\r\n                maxResults: self.maxRes,\r\n                keyword: self.inputSearch\r\n            }\r\n        }));\r\n        var action= resultsFetchData('http://localhost:2999/search', {\r\n                maxResults: self.maxRes,\r\n                keyword: self.inputSearch\r\n        });\r\n        console.log(\"ACTION :\"+action);\r\n        action();\r\n        store.dispatch(resultsFetchData('http://localhost:2999/search', {\r\n            body: {\r\n                maxResults: self.maxRes,\r\n                keyword: self.inputSearch\r\n            }\r\n        }));\r\n        //console.log(\"Submitting search: search = \"+this.inputSearch+\" max = \"+this.maxRes);\r\n        axios.post('http://localhost:2999/search', {\r\n            maxResults: self.maxRes,\r\n            keyword: self.inputSearch\r\n        })\r\n        .then(function(response) {\r\n            console.log(JSON.stringify(response.data));\r\n            //self.data = response.data;\r\n            self.dispatchUpdateList('righPanel', response.data);\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err);\r\n        })\r\n\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"Dispatching data in component did mount: \"+JSON.stringify(this.data));\r\n\r\n    }\r\n\r\n    dispatchUpdateList(panel, videos){\r\n        if(this.data !== []) {\r\n            store.dispatch(updateListReducer(panel, videos));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        store.dispatch(isSearching(false));\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return(\r\n\r\n            <Form onSubmit={() => {this.handleSubmit()}}>\r\n                <Form.Group widths='equal'>\r\n                    <Form.Input fluid onChange={(event, data) => {this.inputSearch = data.value}} label='Your search' placeholder='Search...' />\r\n                    <Form.Select\r\n                        fluid\r\n                        label='How many results ?'\r\n                        options={options}\r\n                        placeholder='How many results ?'\r\n                        onChange={(event, data) => {this.maxRes = data.value}}\r\n                    />\r\n                </Form.Group>\r\n                <Form.Button>Search</Form.Button>\r\n            </Form>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}