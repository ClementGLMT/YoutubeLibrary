{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\servi\\\\Documents\\\\EZProjet\\\\YoutubeLibrary\\\\youtube-library-app\\\\src\\\\components\\\\videolist.js\";\nimport React from 'react';\nimport GridList from '@material-ui/core/GridList';\nimport tileData from './tileData';\nimport VideoTile from './videoTile';\nimport { store } from '../store';\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\nimport { modalAction } from '../actions';\nimport './components.css';\nimport 'semantic-ui-css/semantic.min.css';\nexport default class VideoList extends React.Component {\n  getTitleAndSubtitle(title) {\n    if (title.isParsed === 1) {\n      var subtitle = '';\n      var fullTitle = title;\n\n      if (title.length > 41) {\n        var arr = title.split(' ');\n        title = ''; //console.log(arr);\n\n        var i = 0;\n\n        while (title.length + arr[i].length < 40) {\n          title = title.concat(arr[i]);\n          title = title.concat(' '); //console.log(\"Title = \"+ title+\" for i = \"+i);\n\n          i++;\n        } //console.log(\"break for i = \"+i);\n\n\n        for (let j = i; j < arr.length; j++) {\n          subtitle = subtitle.concat(arr[j]);\n          subtitle = subtitle.concat(' '); //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\n        }\n\n        return {\n          title: title,\n          subtitle: subtitle\n        };\n      }\n\n      return {\n        titles: {\n          title: fullTitle,\n          subtitle: ''\n        },\n        isParsed: 1\n      };\n    }\n\n    return title;\n  }\n\n  render() {\n    var data;\n\n    if (this.props.isDataLoaded === 0) {\n      console.log(\"Loading tileData\");\n      data = tileData;\n    } else {\n      console.log(\"Loading propsData\");\n      data = this.props.data;\n    } //console.log('Title : '+data.title\n\n\n    for (let i = 0; i < data.length; i++) {\n      var data2 = this.getTitleAndSubtitle(data[i]);\n      console.log(JSON.stringify(\"data2: \" + data2));\n\n      if (data2.isParsed === 0) {\n        data[i].title = data2.titles.title;\n        data[i].subtitle = data2.titles.subtitle;\n      }\n    }\n\n    console.log(\"Data in videoList : \" + JSON.stringify(data));\n    return React.createElement(\"div\", {\n      className: 'root' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(GridList, {\n      cellHeight: 180,\n      className: 'gridList' + this.props.side,\n      cols: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, data.map(tile => React.createElement(VideoTile, {\n      side: this.props.side,\n      key: tile.id,\n      data: tile,\n      gridTileClass: 'gridTile' + this.props.side,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))));\n  }\n\n}\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/","map":{"version":3,"sources":["C:/Users/servi/Documents/EZProjet/YoutubeLibrary/youtube-library-app/src/components/videolist.js"],"names":["React","GridList","tileData","VideoTile","store","Icon","Header","Button","Image","Modal","Input","modalAction","VideoList","Component","getTitleAndSubtitle","title","isParsed","subtitle","fullTitle","length","arr","split","i","concat","j","titles","render","data","props","isDataLoaded","console","log","data2","JSON","stringify","side","map","tile","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport tileData from './tileData';\r\nimport VideoTile from './videoTile'\r\nimport {store} from '../store';\r\nimport { Icon, Header, Button, Image, Modal, Input } from 'semantic-ui-react';\r\nimport {modalAction} from '../actions';\r\nimport './components.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\n\r\n\r\nexport default class VideoList extends React.Component {\r\n\r\n\r\n\r\n  getTitleAndSubtitle(title) {\r\n\r\n    if(title.isParsed === 1){\r\n      var subtitle='';\r\n      var fullTitle = title;\r\n  \r\n      if(title.length > 41){\r\n        var arr = title.split(' ');\r\n        title = '';\r\n        //console.log(arr);\r\n        var i=0;\r\n        while ((title.length + arr[i].length) < 40) {\r\n          title = title.concat(arr[i]);\r\n          title = title.concat(' ');\r\n          //console.log(\"Title = \"+ title+\" for i = \"+i);\r\n            i++;\r\n        }\r\n        //console.log(\"break for i = \"+i);\r\n  \r\n        for (let j = i; j < arr.length;j++) {\r\n          subtitle = subtitle.concat(arr[j]);  \r\n          subtitle = subtitle.concat(' ');\r\n          //console.log(\"subtitle = \"+ subtitle+\" for j = \"+j);\r\n        }\r\n        return {\r\n          title: title,\r\n          subtitle: subtitle\r\n        }\r\n      }\r\n      return {\r\n        titles: {\r\n          title: fullTitle,\r\n          subtitle: '',\r\n        },\r\n        isParsed: 1\r\n      }\r\n    }\r\n    return title;\r\n  }\r\n\r\n\r\n  \r\n\r\n  render(){\r\n\r\n    var data;\r\n    if(this.props.isDataLoaded === 0){\r\n      console.log(\"Loading tileData\");\r\n      data = tileData;\r\n    }\r\n    else {\r\n      console.log(\"Loading propsData\");\r\n      data = this.props.data;\r\n    }\r\n\r\n\r\n    //console.log('Title : '+data.title\r\n\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      var data2 = this.getTitleAndSubtitle(data[i]);\r\n      console.log(JSON.stringify(\"data2: \"+data2));\r\n      if(data2.isParsed === 0){\r\n        data[i].title = data2.titles.title;\r\n        data[i].subtitle = data2.titles.subtitle;\r\n      }\r\n    }\r\n\r\n\r\n    console.log(\"Data in videoList : \"+JSON.stringify(data));\r\n\r\n    return (\r\n        <div className={'root'+this.props.side} >\r\n          <GridList cellHeight={180} className={'gridList'+this.props.side} cols={1}>\r\n            {data.map(tile => (\r\n          \r\n                <VideoTile side={this.props.side} key={tile.id} data={tile} gridTileClass= {'gridTile'+this.props.side} />\r\n            \r\n            ))}\r\n          </GridList>\r\n\r\n          \r\n        </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n/*<GridListTile  key={tile.id} cols={1} className={this.state.gridTileClass}>\r\n<img src={tile.thumbnails[this.state.thumbsize].url} width={tile.thumbnails[this.state.thumbsize].width} height={tile.thumbnails[this.state.thumbsize].height} alt={tile.title} />\r\n<GridListTileBar title={tile.title} />\r\n</GridListTile>*/"]},"metadata":{},"sourceType":"module"}